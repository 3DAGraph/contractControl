{
  "contractName": "main",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "changeTime_C1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getProfitout",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "profit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotterybalance_L1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "layercontract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "search_L1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "winnerTime_C1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotteryloser_C1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolp_lucky10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotteryinittime_lucky1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_lucky10",
      "outputs": [
        {
          "name": "player",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "gun_crazy1",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotteryinittime_lucky10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotterybalance_L10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "inviteInquire",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "winnerTime_C10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "inviteNumber",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "resultMap_L1",
      "outputs": [
        {
          "name": "winner",
          "type": "uint256"
        },
        {
          "name": "loser",
          "type": "uint256"
        },
        {
          "name": "common1",
          "type": "uint256"
        },
        {
          "name": "common2",
          "type": "uint256"
        },
        {
          "name": "common3",
          "type": "uint256"
        },
        {
          "name": "common4",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "changeTime_L10",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pooln_Crazy1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "unusedTime_C1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "setLose",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initTime_C10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "resultMap_L10",
      "outputs": [
        {
          "name": "winner",
          "type": "uint256"
        },
        {
          "name": "loser",
          "type": "uint256"
        },
        {
          "name": "common1",
          "type": "uint256"
        },
        {
          "name": "common2",
          "type": "uint256"
        },
        {
          "name": "common3",
          "type": "uint256"
        },
        {
          "name": "common4",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolp_lucky1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_Crazy1",
      "outputs": [
        {
          "name": "player",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalTime_C1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "resultMap_C10",
      "outputs": [
        {
          "name": "winner",
          "type": "uint256"
        },
        {
          "name": "loser",
          "type": "uint256"
        },
        {
          "name": "loser1",
          "type": "uint256"
        },
        {
          "name": "loser2",
          "type": "uint256"
        },
        {
          "name": "common3",
          "type": "uint256"
        },
        {
          "name": "common4",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "unusedTime_C10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "getlayer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_Crazy10",
      "outputs": [
        {
          "name": "player",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotterywinner_C1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotterywinner_C10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotteryPeopleNum_L10",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "gun_lucky1",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "downlineMap",
      "outputs": [
        {
          "name": "downAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolp_Crazy10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "setTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "inviteinquire",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "resultMap_C1",
      "outputs": [
        {
          "name": "winner",
          "type": "uint256"
        },
        {
          "name": "loser",
          "type": "uint256"
        },
        {
          "name": "loser1",
          "type": "uint256"
        },
        {
          "name": "loser2",
          "type": "uint256"
        },
        {
          "name": "common3",
          "type": "uint256"
        },
        {
          "name": "common4",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "rand",
          "type": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "randomLottery",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractInquire",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalTime_C10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getadminProfitout",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "inquire",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "player",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "changeTime_C10",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "changeTime_L1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "inviteAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotteryinittime_Crazy10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pool_lucky1",
      "outputs": [
        {
          "name": "player",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lucky1contract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotteryPeopleNum_L1",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "search_C1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pooln_lucky10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "rand",
          "type": "uint256"
        }
      ],
      "name": "randomNewLucky",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "downnumber",
          "type": "uint256"
        }
      ],
      "name": "downlineSearch",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "setWin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotteryinittime_Crazy1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotteryloser_C10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "gun_crazy10",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "search_C10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolp_Crazy1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "regist",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "num",
          "type": "uint256"
        }
      ],
      "name": "getinviteNumber",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initTime_C1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pooln_lucky1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pooln_Crazy10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotterybalance_C10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "layermap",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "search_L10",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lotterybalance_C1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "gun_lucky10",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "changeAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "setProfit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pool",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "status",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "types",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "NProfitEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "LProfitEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "inputNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "registNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "upline",
          "type": "address"
        }
      ],
      "name": "RegistEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pool",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "winner",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "loser",
          "type": "uint256"
        }
      ],
      "name": "LuckyProfitEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pool",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "winner",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "loser1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "loser2",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "loser3",
          "type": "uint256"
        }
      ],
      "name": "CrazyProfitEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pool",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "loser",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "LuckyLotteryEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pool",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "CrazyLotteryEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "bal",
          "type": "uint256"
        }
      ],
      "name": "backup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "set_lucky1contract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "start",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106103c6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680624a7fe4146105355780630101ec861461056257806302550e4d1461057957806307da68f5146105d05780630821fc01146105e75780630e283f35146106125780631798fdc514610669578063240e7237146106c65780632507c31c146106f157806328c609781461071c5780632954a701146107475780632ec4bff21461077257806333800f37146107df5780633cf3f0d6146108295780633e19f66a146108545780633f91d2cb1461087f57806342913e10146108d6578063429ee4dc146109015780634780adc81461096e57806348d0934b146109d25780634bec36e0146109ff57806352d2ec7514610a2a5780635568b0ae14610a555780636253bb1114610a98578063640f085d14610ac3578063654425ea14610b275780636c8f2ade14610b525780636f68511714610bbf57806371b2619414610bea57806371e6ad2c14610c4e5780637510ecdc14610c7957806375829def14610cfc578063771b251c14610d3f5780637c64240014610dac5780637cee2be514610dd75780638415510214610e0257806384dee71314610e2d5780638542b7f814610e7757806389bed91514610ece5780638cb3235214610ef95780638da5cb5b14610f3c5780638ed10dc814610f935780639403c16014610fea57806394187bc81461104e5780639435245e14611091578063971b1c26146110dc578063996594a91461113357806399b72aac1461115e5780639a30c185146111755780639e0551c6146111cc578063a1f1fbef14611239578063a20b085814611266578063a54fa82f14611293578063a612b73f146112be578063a90792c6146112e9578063b417884714611356578063b452a319146113ad578063b78eafe6146113d8578063b938605214611435578063be86618b14611460578063be9a6555146114c4578063bec27be0146114db578063c041b0591461156f578063c0b259ca146115b2578063c1a9c2f8146115dd578063c228cbf814611608578063c44176e514611652578063c4fa52b3146116af578063cb4b6b8a146116da578063ceb73a91146116e4578063d0a74fd314611751578063d55c38fc1461177e578063e30abc60146117a9578063ece2f25e146117d4578063f083e71a146117ff578063f0f1b0331461182a578063f20593d7146118ad578063f2fde38b1461190a578063f40695141461194d578063f6af1bfb14611978578063f851a440146119c2578063fe64d6ff14611a19578063fee73e8614611a5c575b60006038541415156103d757600080fd5b6745671f00e9ba80003414156103ec57610533565b674563918244f4000034141561040157610532565b670de444324c2a800034141561041f57610419611aa9565b50610531565b670de0b6b3a764000034141561043d57610437612419565b50610530565b670166d2f70250800034141561045b57610455612c61565b5061052f565b67016345785d8a0000341415610479576104736135d1565b5061052e565b67016345785d8a000034108015610497575066b1a2bc2ec500003410155b156104a9576104a4613e16565b61052d565b60003414156104bf576104ba614477565b61052c565b60023414156104cd5761052b565b60033414156104db5761052a565b60043414156104e957610529565b60053414156104f757610528565b600634141561050557610527565b600134141561051357610526565b6007341415610525576105246144ff565b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b005b34801561054157600080fd5b50610560600480360381019080803590602001909291905050506145cb565b005b34801561056e57600080fd5b50610577614477565b005b34801561058557600080fd5b506105ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614634565b6040518082815260200191505060405180910390f35b3480156105dc57600080fd5b506105e561464c565b005b3480156105f357600080fd5b506105fc6146b2565b6040518082815260200191505060405180910390f35b34801561061e57600080fd5b506106276146b8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561067557600080fd5b50610694600480360381019080803590602001909291905050506146de565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156106d257600080fd5b506106db614729565b6040518082815260200191505060405180910390f35b3480156106fd57600080fd5b5061070661472f565b6040518082815260200191505060405180910390f35b34801561072857600080fd5b50610731614735565b6040518082815260200191505060405180910390f35b34801561075357600080fd5b5061075c61473b565b6040518082815260200191505060405180910390f35b34801561077e57600080fd5b5061079d60048036038101908080359060200190929190505050614741565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107e7612c61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561083557600080fd5b5061083e61477f565b6040518082815260200191505060405180910390f35b34801561086057600080fd5b50610869614785565b6040518082815260200191505060405180910390f35b34801561088b57600080fd5b506108c0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061478b565b6040518082815260200191505060405180910390f35b3480156108e257600080fd5b506108eb6147a3565b6040518082815260200191505060405180910390f35b34801561090d57600080fd5b5061092c600480360381019080803590602001909291905050506147a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097a57600080fd5b50610999600480360381019080803590602001909291905050506147dc565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b3480156109de57600080fd5b506109fd60048036038101908080359060200190929190505050614818565b005b348015610a0b57600080fd5b50610a14614881565b6040518082815260200191505060405180910390f35b348015610a3657600080fd5b50610a3f614887565b6040518082815260200191505060405180910390f35b348015610a6157600080fd5b50610a96600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061488d565b005b348015610aa457600080fd5b50610aad61491c565b6040518082815260200191505060405180910390f35b348015610acf57600080fd5b50610aee60048036038101908080359060200190929190505050614922565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b348015610b3357600080fd5b50610b3c61495e565b6040518082815260200191505060405180910390f35b348015610b5e57600080fd5b50610b7d60048036038101908080359060200190929190505050614964565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bcb57600080fd5b50610bd46149a2565b6040518082815260200191505060405180910390f35b348015610bf657600080fd5b50610c15600480360381019080803590602001909291905050506149a8565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b348015610c5a57600080fd5b50610c636149e4565b6040518082815260200191505060405180910390f35b348015610c8557600080fd5b50610cba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506149ea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d0857600080fd5b50610d3d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614a53565b005b348015610d4b57600080fd5b50610d6a60048036038101908080359060200190929190505050614b2e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610db857600080fd5b50610dc1614b6c565b6040518082815260200191505060405180910390f35b348015610de357600080fd5b50610dec614b72565b6040518082815260200191505060405180910390f35b348015610e0e57600080fd5b50610e17614b78565b6040518082815260200191505060405180910390f35b610e356135d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e8357600080fd5b50610eb8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614b7e565b6040518082815260200191505060405180910390f35b348015610eda57600080fd5b50610ee3614b9c565b6040518082815260200191505060405180910390f35b348015610f0557600080fd5b50610f3a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614ba2565b005b348015610f4857600080fd5b50610f51614bec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610f9f57600080fd5b50610fd4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614c11565b6040518082815260200191505060405180910390f35b348015610ff657600080fd5b5061101560048036038101908080359060200190929190505050614c5a565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b34801561105a57600080fd5b5061108f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614c96565b005b34801561109d57600080fd5b506110c66004803603810190808035906020019092919080359060200190929190505050614d36565b6040518082815260200191505060405180910390f35b3480156110e857600080fd5b506110f1614de7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561113f57600080fd5b50611148614e11565b6040518082815260200191505060405180910390f35b34801561116a57600080fd5b506111736144ff565b005b34801561118157600080fd5b506111b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614e17565b6040518082815260200191505060405180910390f35b3480156111d857600080fd5b506111f760048036038101908080359060200190929190505050614e60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561124557600080fd5b5061126460048036038101908080359060200190929190505050614e93565b005b34801561127257600080fd5b5061129160048036038101908080359060200190929190505050614efc565b005b34801561129f57600080fd5b506112a8614f65565b6040518082815260200191505060405180910390f35b3480156112ca57600080fd5b506112d3614f6b565b6040518082815260200191505060405180910390f35b3480156112f557600080fd5b5061131460048036038101908080359060200190929190505050614f71565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561136257600080fd5b5061136b614faf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156113b957600080fd5b506113c2614fd5565b6040518082815260200191505060405180910390f35b3480156113e457600080fd5b5061140360048036038101908080359060200190929190505050614fdb565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b34801561144157600080fd5b5061144a615026565b6040518082815260200191505060405180910390f35b34801561146c57600080fd5b5061148b6004803603810190808035906020019092919050505061502c565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b3480156114d057600080fd5b506114d9615266565b005b3480156114e757600080fd5b50611526600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506152cc565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561157b57600080fd5b506115b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050615394565b005b3480156115be57600080fd5b506115c7615423565b6040518082815260200191505060405180910390f35b3480156115e957600080fd5b506115f2615429565b6040518082815260200191505060405180910390f35b611610611aa9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561165e57600080fd5b5061167d6004803603810190808035906020019092919050505061542f565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156116bb57600080fd5b506116c461547a565b6040518082815260200191505060405180910390f35b6116e2613e16565b005b3480156116f057600080fd5b5061170f60048036038101908080359060200190929190505050615480565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561175d57600080fd5b5061177c600480360381019080803590602001909291905050506154bd565b005b34801561178a57600080fd5b50611793615583565b6040518082815260200191505060405180910390f35b3480156117b557600080fd5b506117be615589565b6040518082815260200191505060405180910390f35b3480156117e057600080fd5b506117e961558f565b6040518082815260200191505060405180910390f35b34801561180b57600080fd5b50611814615595565b6040518082815260200191505060405180910390f35b34801561183657600080fd5b5061186b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061559b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156118b957600080fd5b506118d8600480360381019080803590602001909291905050506155ce565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b34801561191657600080fd5b5061194b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050615619565b005b34801561195957600080fd5b506119626156f3565b6040518082815260200191505060405180910390f35b611980612419565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156119ce57600080fd5b506119d76156f9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015611a2557600080fd5b50611a5a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061571f565b005b348015611a6857600080fd5b50611aa7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506157fa565b005b6000670de444324c2a800034141515611ac157600080fd5b615460602d540142118015611ad857506001603554115b15611ba857602f6000611aee6127106006614d36565b60355401815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064603260305402811515611b4e57fe5b049081150290604051600060405180830381858888f19350505050158015611b7a573d6000803e3d6000fd5b506002603054811515611b8957fe5b04603081905550600160348190555042602d8190555060016035819055505b33602f6000602b54815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e86005602e5402811515611c1157fe5b04600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cec670de0b6b3a764000033615889565b50611cf7600161502c565b603760006006602b54811515611d0957fe5b0681526020019081526020016000206000016000603760006006602b54811515611d2f57fe5b0681526020019081526020016000206001016000603760006006602b54811515611d5557fe5b0681526020019081526020016000206002016000603760006006602b54811515611d7b57fe5b0681526020019081526020016000206003016000603760006006602b54811515611da157fe5b0681526020019081526020016000206004016000603760006006602b54811515611dc757fe5b06815260200190815260200160002060050160008c919050558b919050558a919050558991905055889190505587919050555050505050506006602b541015156123f15760006006602b54811515611e1b57fe5b061415611edc57602f6000600660376000808152602001908152602001600020600001546006602b54811515611e4d57fe5b06602b54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6724150e39800400009081150290604051600060405180830381858888f19350505050158015611ed3573d6000803e3d6000fd5b50426031819055505b60016006602b54811515611eec57fe5b061415611fa657602f6000600660376000808152602001908152602001600020600101546006602b54811515611f1e57fe5b06602b54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f19350505050158015611f9d573d6000803e3d6000fd5b50426033819055505b60026006602b54811515611fb657fe5b06141561207057602f6000600660376000808152602001908152602001600020600201546006602b54811515611fe857fe5b06602b54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f19350505050158015612067573d6000803e3d6000fd5b50426033819055505b60036006602b5481151561208057fe5b06141561213a57602f6000600660376000808152602001908152602001600020600301546006602b548115156120b257fe5b06602b54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f19350505050158015612131573d6000803e3d6000fd5b50426033819055505b60046006602b5481151561214a57fe5b06141561220b57602f6000600660376000808152602001908152602001600020600401546006602b5481151561217c57fe5b06602b54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6714d1120d7b1600009081150290604051600060405180830381858888f19350505050158015612202573d6000803e3d6000fd5b50426033819055505b60056006602b5481151561221b57fe5b0614156122dc57602f6000600660376000808152602001908152602001600020600501546006602b5481151561224d57fe5b06602b54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6714d1120d7b1600009081150290604051600060405180830381858888f193505050501580156122d3573d6000803e3d6000fd5b50426032819055505b60056006602b548115156122ec57fe5b0614801561230257506034546031546032540311155b1561232157603154603254036033819055506005602b54036036819055505b60056006602b5481151561233157fe5b06148015612346575060345460315460325403115b1561236557603154603254036034819055506005602b54036035819055505b60056006602b5481151561237557fe5b061415801561238b575060345460315460325403115b156123aa57603154603254036033819055506005602b54036036819055505b60056006602b548115156123ba57fe5b06141580156123d157506034546031546032540311155b156123f057603154603254036033819055506005602b54036036819055505b5b603c602e548115156123ff57fe5b04603054016030819055506001602b5401602b8190555090565b6000670de0b6b3a76400003414151561243157600080fd5b615460602554014211801561244857506001602954135b156125145760276000612462612710600160295403614d36565b60235403815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60646032602854028115156124c257fe5b049081150290604051600060405180830381858888f193505050501580156124ee573d6000803e3d6000fd5b506001602981905550600260285481151561250557fe5b04602881905550426025819055505b3360276000602354815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e860056026540281151561257d57fe5b04600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612658670de0b6b3a764000033615889565b50612663600161502c565b602a6000600660235481151561267557fe5b0681526020019081526020016000206000016000602a6000600660235481151561269b57fe5b0681526020019081526020016000206001016000602a600060066023548115156126c157fe5b0681526020019081526020016000206002016000602a600060066023548115156126e757fe5b0681526020019081526020016000206003016000602a6000600660235481151561270d57fe5b0681526020019081526020016000206004016000602a6000600660235481151561273357fe5b06815260200190815260200160002060050160008c919050558b919050558a919050558991905055889190505587919050555050505050506006602354101515612c2d576000600660235481151561278757fe5b06141561284157602760006006602a60008081526020019081526020016000206000015460066023548115156127b957fe5b06602354030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6710a741a4627800009081150290604051600060405180830381858888f1935050505015801561283f573d6000803e3d6000fd5b505b6001600660235481151561285157fe5b06141561290457602760006006602a600080815260200190815260200160002060010154600660235481151561288357fe5b06602354030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f19350505050158015612902573d6000803e3d6000fd5b505b6002600660235481151561291457fe5b0614156129ce57602760006006602a600080815260200190815260200160002060020154600660235481151561294657fe5b06602354030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670f43fc2c04ee00009081150290604051600060405180830381858888f193505050501580156129cc573d6000803e3d6000fd5b505b600360066023548115156129de57fe5b061415612a9857602760006006602a6000808152602001908152602001600020600301546006602354811515612a1057fe5b06602354030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670f43fc2c04ee00009081150290604051600060405180830381858888f19350505050158015612a96573d6000803e3d6000fd5b505b60046006602354811515612aa857fe5b061415612b6257602760006006602a6000808152602001908152602001600020600401546006602354811515612ada57fe5b06602354030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670f43fc2c04ee00009081150290604051600060405180830381858888f19350505050158015612b60573d6000803e3d6000fd5b505b60056006602354811515612b7257fe5b061415612c2c57602760006006602a6000808152602001908152602001600020600501546006602354811515612ba457fe5b06602354030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670f43fc2c04ee00009081150290604051600060405180830381858888f19350505050158015612c2a573d6000803e3d6000fd5b505b5b600160295401602981905550603c602654811515612c4757fe5b046028540160288190555060016023540160238190555090565b6000670166d2f70250800034141515612c7957600080fd5b6154606018540142118015612c9057506001602054115b15612d6057601a6000612ca66127106006614d36565b60205401815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60646032601b5402811515612d0657fe5b049081150290604051600060405180830381858888f19350505050158015612d32573d6000803e3d6000fd5b506002601b54811515612d4157fe5b04601b819055506001601f819055504260188190555060016020819055505b33601a6000601654815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e8600560195402811515612dc957fe5b04600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612ea467016345785d8a000033615889565b50612eaf600161502c565b602260006006601654811515612ec157fe5b0681526020019081526020016000206000016000602260006006601654811515612ee757fe5b0681526020019081526020016000206001016000602260006006601654811515612f0d57fe5b0681526020019081526020016000206002016000602260006006601654811515612f3357fe5b0681526020019081526020016000206003016000602260006006601654811515612f5957fe5b0681526020019081526020016000206004016000602260006006601654811515612f7f57fe5b06815260200190815260200160002060050160008c919050558b919050558a9190505589919050558891905055879190505550505050505060066016541015156135a95760006006601654811515612fd357fe5b06141561309457601a600060066022600080815260200190815260200160002060000154600660165481151561300557fe5b06601654030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67039bb49f599a00009081150290604051600060405180830381858888f1935050505015801561308b573d6000803e3d6000fd5b5042601c819055505b600160066016548115156130a457fe5b06141561315e57601a60006006602260008081526020019081526020016000206001015460066016548115156130d657fe5b06601654030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f19350505050158015613155573d6000803e3d6000fd5b5042601e819055505b6002600660165481151561316e57fe5b06141561322857601a60006006602260008081526020019081526020016000206002015460066016548115156131a057fe5b06601654030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f1935050505015801561321f573d6000803e3d6000fd5b5042601e819055505b6003600660165481151561323857fe5b0614156132f257601a600060066022600080815260200190815260200160002060030154600660165481151561326a57fe5b06601654030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156132e9573d6000803e3d6000fd5b5042601e819055505b6004600660165481151561330257fe5b0614156133c357601a600060066022600080815260200190815260200160002060040154600660165481151561333457fe5b06601654030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00009081150290604051600060405180830381858888f193505050501580156133ba573d6000803e3d6000fd5b5042601e819055505b600560066016548115156133d357fe5b06141561349457601a600060066022600080815260200190815260200160002060050154600660165481151561340557fe5b06601654030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00009081150290604051600060405180830381858888f1935050505015801561348b573d6000803e3d6000fd5b5042601d819055505b600560066016548115156134a457fe5b061480156134ba5750601f54601c54601d540311155b156134d957601c54601d5403601e819055506005601654036021819055505b600560066016548115156134e957fe5b061480156134fe5750601f54601c54601d5403115b1561351d57601c54601d5403601f819055506005601654036020819055505b6005600660165481151561352d57fe5b06141580156135435750601f54601c54601d5403115b1561356257601c54601d5403601e819055506005601654036021819055505b6005600660165481151561357257fe5b06141580156135895750601f54601c54601d540311155b156135a857601c54601d5403601e819055506005601654036021819055505b5b603c6019548115156135b757fe5b04601b5401601b8190555060016016540160168190555090565b600067016345785d8a0000341415156135e957600080fd5b615460601054014211801561360057506001601454135b156136c95760126000613617612710601454614d36565b600e5403815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc606460326013540281151561367757fe5b049081150290604051600060405180830381858888f193505050501580156136a3573d6000803e3d6000fd5b50600160148190555060026013548115156136ba57fe5b04601381905550426010819055505b3360126000600e54815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e860056011540281151561373257fe5b04600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061380d67016345785d8a000033615889565b50613818600161502c565b601560006006600e5481151561382a57fe5b0681526020019081526020016000206000016000601560006006600e5481151561385057fe5b0681526020019081526020016000206001016000601560006006600e5481151561387657fe5b0681526020019081526020016000206002016000601560006006600e5481151561389c57fe5b0681526020019081526020016000206003016000601560006006600e548115156138c257fe5b0681526020019081526020016000206004016000601560006006600e548115156138e857fe5b06815260200190815260200160002060050160008c919050558b919050558a919050558991905055889190505587919050555050505050506006600e54101515613de25760006006600e5481151561393c57fe5b0614156139f65760126000600660156000808152602001908152602001600020600001546006600e5481151561396e57fe5b06600e54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6701aa535d3d0c00009081150290604051600060405180830381858888f193505050501580156139f4573d6000803e3d6000fd5b505b60016006600e54811515613a0657fe5b061415613ab95760126000600660156000808152602001908152602001600020600101546006600e54811515613a3857fe5b06600e54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f19350505050158015613ab7573d6000803e3d6000fd5b505b60026006600e54811515613ac957fe5b061415613b835760126000600660156000808152602001908152602001600020600201546006600e54811515613afb57fe5b06600e54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670186cc6acd4b00009081150290604051600060405180830381858888f19350505050158015613b81573d6000803e3d6000fd5b505b60036006600e54811515613b9357fe5b061415613c4d5760126000600660156000808152602001908152602001600020600301546006600e54811515613bc557fe5b06600e54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670186cc6acd4b00009081150290604051600060405180830381858888f19350505050158015613c4b573d6000803e3d6000fd5b505b60046006600e54811515613c5d57fe5b061415613d175760126000600660156000808152602001908152602001600020600401546006600e54811515613c8f57fe5b06600e54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670186cc6acd4b00009081150290604051600060405180830381858888f19350505050158015613d15573d6000803e3d6000fd5b505b60056006600e54811515613d2757fe5b061415613de15760126000600660156000808152602001908152602001600020600501546006600e54811515613d5957fe5b06600e54030103815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670186cc6acd4b00009081150290604051600060405180830381858888f19350505050158015613ddf573d6000803e3d6000fd5b505b5b600160145401601481905550603c601154811515613dfc57fe5b04601354016013819055506001600e5401600e8190555090565b674563918244f400006064340210151515613e3057600080fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515613e7e57600080fd5b600660006402540be40066b1a2bc2ec500003403811515613e9b57fe5b04815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515613f0557600080fd5b600660006402540be40066b1a2bc2ec500003403811515613f2257fe5b04815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360066000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600854600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503360096000600660006402540be40066b1a2bc2ec50000340381151561408b57fe5b04815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600060096000600660006402540be40066b1a2bc2ec50000340381151561411b57fe5b04815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160096000600660006402540be40066b1a2bc2ec5000034038115156141fb57fe5b04815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001540160096000600660006402540be40066b1a2bc2ec50000340381151561428b57fe5b04815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600160085401600881905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015614370573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f09371afb4578ee0c3f43accbe50410e7c3382f6678dbf0584b31633820acb9e36402540be40066b1a2bc2ec5000034038115156143c257fe5b04600854600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2565b3373ffffffffffffffffffffffffffffffffffffffff166108fc600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156144fc573d6000803e3d6000fd5b50565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156145c8573d6000803e3d6000fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561462657600080fd5b806018540360188190555050565b600b6020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156146a857600080fd5b6001603881905550565b60135481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600061546060105442038115156146f757fe5b046000600e546006600e5481151561470b57fe5b06600e54036013548393509450945094509450945091939590929450565b601f5481565b60215481565b60245481565b60105481565b60276020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b60255481565b60285481565b60076020528060005260406000206000915090505481565b60345481565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60156020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561487357600080fd5b806025540360258190555050565b60165481565b601e5481565b6001600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015401600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60315481565b602a6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b600f5481565b601a6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b601d5481565b60376020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b60335481565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515614aae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515614aea57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b602f6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b60205481565b60355481565b60295481565b60096020528060005260406000206000915090508060000154905081565b602c5481565b42600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60226020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515614cf257600080fd5b80603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082844340604051602001808381526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515614da05780518252602082019150602081019050602083039250614d7b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004811515614dda57fe5b0690508091505092915050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60325481565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515614eee57600080fd5b80602d5403602d8190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515614f5757600080fd5b806010540360108190555050565b60085481565b602d5481565b60126020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60145481565b60008060008060006154606018544203811515614ff457fe5b046000601654600660165481151561500857fe5b0660165403601b548393509450945094509450945091939590929450565b60235481565b60008060008060008060008060008060068b4340604051602001808381526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156150a3578051825260208201915060208101905060208303925061507e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048115156150dd57fe5b0693506006844340604051602001808381526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156151485780518252602082019150602081019050602083039250615123565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900481151561518257fe5b06925060009150828414156151a4576006600185018115156151a057fe5b0692505b600090505b6006811115156151f4578381141580156151c35750828114155b156151e75780600c6000848152602001908152602001600020819055506001820191505b80806001019150506151a9565b600091508383600c600080815260200190815260200160002054600c60006001815260200190815260200160002054600c60006002815260200190815260200160002054600c600060038152602001908152602001600020549950995099509950995099505050505091939550919395565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156152c257600080fd5b6000603881905550565b600080600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154915091509250929050565b6001600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015401600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b60185481565b60365481565b6000806000806000615460602d54420381151561544857fe5b046000602b546006602b5481151561545c57fe5b06602b54036030548393509450945094509450945091939590929450565b60175481565b60006006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561551857600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561557f573d6000803e3d6000fd5b5050565b601c5481565b600e5481565b602b5481565b60305481565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600061546060255442038115156155e757fe5b04600060235460066023548115156155fb57fe5b06602354036028548393509450945094509450945091939590929450565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561567457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156156b057600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b601b5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561577a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156157b657600080fd5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015401600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b600080600080849250602d9150600090505b6007811015615dee57600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561594057615dee565b60008114156159e9576103e86014870281151561595957fe5b04600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550601482039150615de1565b6001811415615a92576103e8600a8702811515615a0257fe5b04600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a82039150615de0565b6002811415615b3b576103e860058702811515615aab57fe5b04600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600582039150615ddf565b6003811415615be4576103e860048702811515615b5457fe5b04600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600482039150615dde565b6004811415615c8d576103e860038702811515615bfd57fe5b04600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600382039150615ddd565b6005811415615d36576103e860028702811515615ca657fe5b04600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600282039150615ddc565b6006811415615ddb576103e860018702811515615d4f57fe5b04600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001820391505b5b5b5b5b5b5b808060010191505061589b565b6103e8828702811515615dfd57fe5b04600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550349350505050929150505600a165627a7a72305820f639f14052d4983bb616eb281fba99dce8ff66a4d1a2e667218f044bce67cf5d0029",
  "sourceMap": "250:1781:11:-;;;1155:42:6;1136:61;;;;;;;;;;;;;;;;;;;;114:42:15;88:68;;;;;;;;;;;;;;;;;;;;297:1:8;272:26;;341:3;304:40;;366:9;350:25;;563:1;531:33;;297:1:2;272:26;;341:3;304:40;;366:9;350:25;;704:1;677:28;;743:1;716:28;;783:1;755:29;;824:1;795:30;;859:1;831:29;;300:1:9;274:27;;345:3;307:41;;371:7;354:24;;571:1;538:34;;300:1:3;274:27;;345:3;307:41;;371:7;354:24;;715:1;687:29;;755:1;727:29;;796:1;767:30;;838:1;808:31;;874:1;845:30;;341:1:11;327:15;;135:10:13;127:5;;:18;;;;;;;;;;;;;;;;;;159:10;151:5;;:18;;;;;;;;;;;;;;;;;;431:42:6;376:8;:52;385:42;376:52;;;;;;;;;;;;;;;;:97;;;;;;;;;;;;;;;;;;538:42;483:8;:52;492:42;483:52;;;;;;;;;;;;;;:97;;;;;;;;;;;;;;;;;;645:42;590:8;:52;599:42;590:52;;;;;;;;;;;;;;:97;;;;;;;;;;;;;;;;;;752:42;697:8;:52;706:42;697:52;;;;;;;;;;;;;;:97;;;;;;;;;;;;;;;;;;859:42;804:8;:52;813:42;804:52;;;;;;;;;;;;;;:97;;;;;;;;;;;;;;;;;;966:42;911:8;:52;920:42;911:52;;;;;;;;;;;;;;:97;;;;;;;;;;;;;;;;;;1082:42;1027:8;:52;1036:42;1027:52;;;;;;;;;;;;;;:97;;;;;;;;;;;;;;;;;;250:1781:11;;;;;;",
  "deployedSourceMap": "250:1781:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:1;869:8;;:11;861:20;;;;;;;;907:11;894:9;:24;891:1132;;;;;;980:7;967:9;:20;963:1060;;;;;;1055:11;1042:9;:24;1038:985;;;1077:13;:11;:13::i;:::-;;1038:985;;;1123:7;1110:9;:20;1106:917;;;1142:13;:11;:13::i;:::-;;1106:917;;;1188:11;1175:9;:24;1171:852;;;1210:12;:10;:12::i;:::-;;1171:852;;;1255:9;1242;:22;1238:785;;;1276:12;:10;:12::i;:::-;;1238:785;;;1320:9;1308;:21;:48;;;;;1346:10;1333:9;:23;;1308:48;1304:719;;;1371:8;:6;:8::i;:::-;1304:719;;;1411:5;1398:9;:18;1395:628;;;1431:14;:12;:14::i;:::-;1395:628;;;1477:5;1464:9;:18;1461:562;;;;;;1567:5;1554:9;:18;1551:472;;;;;;1657:5;1644:9;:18;1641:382;;;;;;1740:5;1727:9;:18;1724:299;;;;;;1824:5;1811:9;:18;1808:215;;;;;;1896:5;1883:9;:18;1880:143;;;;;;1973:5;1960:9;:18;1957:66;;;1993:19;:17;:19::i;:::-;1957:66;1880:143;1808:215;1724:299;1641:382;1551:472;1461:562;1395:628;1304:719;1238:785;1171:852;1106:917;1038:985;963:1060;891:1132;250:1781;866:123:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;866:123:2;;;;;;;;;;;;;;;;;;;;;;;;;;296:85:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;296:85:7;;;;;;120:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;120:38:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;651:82:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;651:82:11;;;;;;496:29:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;496:29:8;;;;;;;;;;;;;;;;;;;;;;;286:28:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;286:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;3461:206:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3461:206:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:29:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;755:29:2;;;;;;;;;;;;;;;;;;;;;;;831;;8:9:-1;5:2;;;30:1;27;20:12;5:2;831:29:2;;;;;;;;;;;;;;;;;;;;;;;274:27:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:27:9;;;;;;;;;;;;;;;;;;;;;;;304:40:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;304:40:8;;;;;;;;;;;;;;;;;;;;;;;443:53:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:53:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:3352:2;;;;;;;;;;;;;;;;;;;;;;;;;;;307:41:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:41:9;;;;;;;;;;;;;;;;;;;;;;;502:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;502:30:9;;;;;;;;;;;;;;;;;;;;;;;1253:45:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1253:45:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:30:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:30:3;;;;;;;;;;;;;;;;;;;;;;;1203:44:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1203:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:50:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;859:50:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:126:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;578:126:9;;;;;;;;;;;;;;;;;;;;;;;;;;242:24:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;242:24:2;;;;;;;;;;;;;;;;;;;;;;;716:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;716:28:2;;;;;;;;;;;;;;;;;;;;;;;345:98:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;345:98:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:24:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;606:24:3;;;;;;;;;;;;;;;;;;;;;;;871:52:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;871:52:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;272:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:26:8;;;;;;;;;;;;;;;;;;;;;;;439:51:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;439:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;677:28:2;;;;;;;;;;;;;;;;;;;;;;;1172:52:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1172:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;727:29:3;;;;;;;;;;;;;;;;;;;;;;;3270:108:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3270:108:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;378:122:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;378:122:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;443:53:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:30:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;795:30:2;;;;;;;;;;;;;;;;;;;;;;;808:31:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;808:31:3;;;;;;;;;;;;;;;;;;;;;;;538:34:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;538:34:9;;;;;;;;;;;;;;;;;;;;;;;915:2443:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1535:56:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1535:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:27:3;;;;;;;;;;;;;;;;;;;;;;;448:79:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;448:79:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;47:20:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47:20:13;;;;;;;;;;;;;;;;;;;;;;;;;;;1874:113:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1874:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:50:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1153:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:128:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;518:128:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;90:197:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;90:197:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:95:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;302:95:15;;;;;;;;;;;;;;;;;;;;;;;;;;;687:29:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:29:3;;;;;;;;;;;;;;;;;;;;;;;386:100:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:100:7;;;;;;190;;8:9:-1;5:2;;;30:1;27;20:12;5:2;190:100:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:38:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:38:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;881:126:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;881:126:3;;;;;;;;;;;;;;;;;;;;;;;;;;570:123:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;570:123:8;;;;;;;;;;;;;;;;;;;;;;;;;;1304:24:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:24:6;;;;;;;;;;;;;;;;;;;;;;;307:41:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:41:3;;;;;;;;;;;;;;;;;;;;;;;439:51:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;439:51:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:29:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;458:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;531:33:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;531:33:8;;;;;;;;;;;;;;;;;;;;;;;4664:206:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4664:206:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;243:25:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:25:9;;;;;;;;;;;;;;;;;;;;;;;658:651:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;658:651:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;738:83:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;738:83:11;;;;;;1660:208:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:208:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:95:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;245:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:40:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;304:40:2;;;;;;;;;;;;;;;;;;;;;;;845:30:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;845:30:3;;;;;;;;;;;;;;;;;;;;;;;1230:3463;;;;;;;;;;;;;;;;;;;;;;;;;;;4796:212;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4796:212:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;272:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:26:2;;;;;;;;;;;;;;;;;;;;;;;1993:1108:6;;;;;;3131:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3131:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:105:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:105:11;;;;;;;;;;;;;;;;;;;;;;;;;;598:23:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;598:23:2;;;;;;;;;;;;;;;;;;;;;;;242:24:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;242:24:8;;;;;;;;;;;;;;;;;;;;;;;243:25:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:25:3;;;;;;;;;;;;;;;;;;;;;;;502:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;502:30:3;;;;;;;;;;;;;;;;;;;;;;;188:43:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;188:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3535:214:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3535:214:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:126:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;249:126:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:29:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;496:29:2;;;;;;;;;;;;;;;;;;;;;;;929:2503:9;;;;;;;;;;;;;;;;;;;;;;;;;;;71:20:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;71:20:13;;;;;;;;;;;;;;;;;;;;;;;;;;;161:138:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;161:138:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:124:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;532:124:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1230:3463:3;1277:7;1320:11;1307:9;:24;1299:33;;;;;;;;1377:5;1353:23;;:29;1349:3;:33;:54;;;;;1402:1;1384:17;;:19;1349:54;1346:368;;;1422:12;:54;1453:22;1467:5;1473:1;1453:13;:22::i;:::-;1435:17;;:40;1422:54;;;;;;;;;;;:61;;;;;;;;;;;;:70;;:97;1515:3;1512:2;1493:18;;:21;:25;;;;;;;;1422:97;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1422:97:3;1577:1;1558:18;;:20;;;;;;;;1537:18;:41;;;;1613:1;1596:14;:18;;;;1658:3;1632:23;:29;;;;1698:1;1679:17;:20;;;;1346:368;1764:10;1727:12;:27;1740:13;;1727:27;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;1850:4;1848:1;1838:9;;:11;:16;;;;;;;;1814:6;:23;1821:15;;;;;;;;;;;1814:23;;;;;;;;;;;;;;;;:40;1788:6;:23;1795:15;;;;;;;;;;;1788:23;;;;;;;;;;;;;;;:66;;;;1868:34;1883:7;1891:10;1868:14;:34::i;:::-;;2214:17;2229:1;2214:14;:17::i;:::-;1917:13;:30;1945:1;1931:13;;:15;;;;;;;;1917:30;;;;;;;;;;;:37;;;1968:13;:30;1996:1;1982:13;;:15;;;;;;;;1968:30;;;;;;;;;;;:36;;;2018:13;:30;2046:1;2032:13;;:15;;;;;;;;2018:30;;;;;;;;;;;:37;;;2069:13;:30;2097:1;2083:13;;:15;;;;;;;;2069:30;;;;;;;;;;;:37;;;2120:13;:30;2148:1;2134:13;;:15;;;;;;;;2120:30;;;;;;;;;;;:38;;;2172:13;:30;2200:1;2186:13;;:15;;;;;;;;2172:30;;;;;;;;;;;:38;;;1916:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:1;2248:13;;:16;;2245:2329;;;2303:1;2300;2286:13;;:15;;;;;;;;:18;2283:205;;;2327:12;:75;2400:1;2375:13;:16;2389:1;2375:16;;;;;;;;;;;:23;;;2371:1;2357:13;;:15;;;;;;;;2342:13;;:31;2341:57;2340:61;2327:75;;;;;;;;;;;:82;;;;;;;;;;;;:91;;:102;2419:9;2327:102;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2327:102:3;2466:3;2451:12;:18;;;;2283:205;2525:1;2522;2508:13;;:15;;;;;;;;:18;2505:202;;;2549:12;:74;2621:1;2597:13;:16;2611:1;2597:16;;;;;;;;;;;:22;;;2593:1;2579:13;;:15;;;;;;;;2564:13;;:31;2563:56;2562:60;2549:74;;;;;;;;;;;:81;;;;;;;;;;;;:90;;:97;2640:5;2549:97;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2549:97:3;2685:3;2668:14;:20;;;;2505:202;2744:1;2741;2727:13;;:15;;;;;;;;:18;2724:203;;;2768:12;:75;2841:1;2816:13;:16;2830:1;2816:16;;;;;;;;;;;:23;;;2812:1;2798:13;;:15;;;;;;;;2783:13;;:31;2782:57;2781:61;2768:75;;;;;;;;;;;:82;;;;;;;;;;;;:91;;:98;2860:5;2768:98;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2768:98:3;2905:3;2888:14;:20;;;;2724:203;2964:1;2961;2947:13;;:15;;;;;;;;:18;2944:203;;;2988:12;:75;3061:1;3036:13;:16;3050:1;3036:16;;;;;;;;;;;:23;;;3032:1;3018:13;;:15;;;;;;;;3003:13;;:31;3002:57;3001:61;2988:75;;;;;;;;;;;:82;;;;;;;;;;;;:91;;:98;3080:5;2988:98;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2988:98:3;3125:3;3108:14;:20;;;;2944:203;3184:1;3181;3167:13;;:15;;;;;;;;:18;3164:208;;;3208:12;:76;3282:1;3256:13;:16;3270:1;3256:16;;;;;;;;;;;:24;;;3252:1;3238:13;;:15;;;;;;;;3223:13;;:31;3222:58;3221:62;3208:76;;;;;;;;;;;:83;;;;;;;;;;;;:92;;:103;3301:9;3208:103;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3208:103:3;3350:3;3333:14;:20;;;;3164:208;3409:1;3406;3392:13;;:15;;;;;;;;:18;3389:207;;;3433:12;:76;3507:1;3481:13;:16;3495:1;3481:16;;;;;;;;;;;:24;;;3477:1;3463:13;;:15;;;;;;;;3448:13;;:31;3447:58;3446:62;3433:76;;;;;;;;;;;:83;;;;;;;;;;;;:92;;:103;3526:9;3433:103;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3433:103:3;3574:3;3558:13;:19;;;;3389:207;3638:1;3635;3621:13;;:15;;;;;;;;:18;:64;;;;;3671:14;;3655:12;;3641:13;;:26;:44;;3621:64;3618:220;;;3743:12;;3729:13;;:26;3712:14;:43;;;;3814:1;3800:13;;:15;3781:16;:34;;;;3618:220;3879:1;3876;3862:13;;:15;;;;;;;;:18;:63;;;;;3911:14;;3896:12;;3882:13;;:26;:43;3862:63;3859:220;;;3983:12;;3969:13;;:26;3952:14;:43;;;;4055:1;4041:13;;:15;4021:17;:35;;;;3859:220;4120:1;4117;4103:13;;:15;;;;;;;;:18;;:63;;;;;4152:14;;4137:12;;4123:13;;:26;:43;4103:63;4100:219;;;4224:12;;4210:13;;:26;4193:14;:43;;;;4295:1;4281:13;;:15;4262:16;:34;;;;4100:219;4360:1;4357;4343:13;;:15;;;;;;;;:18;;:64;;;;;4393:14;;4377:12;;4363:13;;:26;:44;;4343:64;4340:220;;;4465:12;;4451:13;;:26;4434:14;:43;;;;4536:1;4522:13;;:15;4503:16;:34;;;;4340:220;2245:2329;4639:2;4629:9;;:12;;;;;;;;4608:18;;:33;4587:18;:54;;;;4685:1;4671:13;;:15;4655:13;:31;;;;1230:3463;:::o;929:2503:9:-;976:7;1019;1006:9;:20;998:29;;;;;;;;1072:5;1048:23;;:29;1044:3;:33;:57;;;;;1100:1;1079:20;;:22;1044:57;1041:554;;;1278:12;:79;1307:49;1321:5;1353:1;1332:20;;:22;1307:13;:49::i;:::-;1291:13;;:65;1278:79;;;;;;;;;;;:86;;;;;;;;;;;;:95;;:122;1396:3;1393:2;1374:18;;:21;:25;;;;;;;;1278:122;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1278:122:9;1445:1;1422:20;:24;;;;1508:1;1489:18;;:20;;;;;;;;1468:18;:41;;;;1557:3;1531:23;:29;;;;1041:554;1645:10;1608:12;:27;1621:13;;1608:27;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;1731:4;1729:1;1719:9;;:11;:16;;;;;;;;1695:6;:23;1702:15;;;;;;;;;;;1695:23;;;;;;;;;;;;;;;;:40;1669:6;:23;1676:15;;;;;;;;;;;1669:23;;;;;;;;;;;;;;;:66;;;;1749:34;1764:7;1772:10;1749:14;:34::i;:::-;;2097:17;2112:1;2097:14;:17::i;:::-;1798:13;:30;1826:1;1812:13;;:15;;;;;;;;1798:30;;;;;;;;;;;:37;;;1849:13;:30;1877:1;1863:13;;:15;;;;;;;;1849:30;;;;;;;;;;;:36;;;1899:13;:30;1927:1;1913:13;;:15;;;;;;;;1899:30;;;;;;;;;;;:38;;;1951:13;:30;1979:1;1965:13;;:15;;;;;;;;1951:30;;;;;;;;;;;:38;;;2003:13;:30;2031:1;2017:13;;:15;;;;;;;;2003:30;;;;;;;;;;;:38;;;2055:13;:30;2083:1;2069:13;;:15;;;;;;;;2055:30;;;;;;;;;;;:38;;;1797:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2146:1;2131:13;;:16;;2128:1126;;;2186:1;2183;2169:13;;:15;;;;;;;;:18;2166:165;;;2210:12;:75;2283:1;2258:13;:16;2272:1;2258:16;;;;;;;;;;;:23;;;2254:1;2240:13;;:15;;;;;;;;2225:13;;:31;2224:57;2223:61;2210:75;;;;;;;;;;;:82;;;;;;;;;;;;:91;;:102;2302:9;2210:102;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2210:102:9;2166:165;2368:1;2365;2351:13;;:15;;;;;;;;:18;2348:160;;;2392:12;:74;2464:1;2440:13;:16;2454:1;2440:16;;;;;;;;;;;:22;;;2436:1;2422:13;;:15;;;;;;;;2407:13;;:31;2406:56;2405:60;2392:74;;;;;;;;;;;:81;;;;;;;;;;;;:90;;:97;2483:5;2392:97;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2392:97:9;2348:160;2545:1;2542;2528:13;;:15;;;;;;;;:18;2525:166;;;2569:12;:76;2643:1;2617:13;:16;2631:1;2617:16;;;;;;;;;;;:24;;;2613:1;2599:13;;:15;;;;;;;;2584:13;;:31;2583:58;2582:62;2569:76;;;;;;;;;;;:83;;;;;;;;;;;;:92;;:103;2662:9;2569:103;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2569:103:9;2525:166;2728:1;2725;2711:13;;:15;;;;;;;;:18;2708:166;;;2752:12;:76;2826:1;2800:13;:16;2814:1;2800:16;;;;;;;;;;;:24;;;2796:1;2782:13;;:15;;;;;;;;2767:13;;:31;2766:58;2765:62;2752:76;;;;;;;;;;;:83;;;;;;;;;;;;:92;;:103;2845:9;2752:103;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2752:103:9;2708:166;2911:1;2908;2894:13;;:15;;;;;;;;:18;2891:166;;;2935:12;:76;3009:1;2983:13;:16;2997:1;2983:16;;;;;;;;;;;:24;;;2979:1;2965:13;;:15;;;;;;;;2950:13;;:31;2949:58;2948:62;2935:76;;;;;;;;;;;:83;;;;;;;;;;;;:92;;:103;3028:9;2935:103;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2935:103:9;2891:166;3094:1;3091;3077:13;;:15;;;;;;;;:18;3074:166;;;3118:12;:76;3192:1;3166:13;:16;3180:1;3166:16;;;;;;;;;;;:24;;;3162:1;3148:13;;:15;;;;;;;;3133:13;;:31;3132:58;3131:62;3118:76;;;;;;;;;;;:83;;;;;;;;;;;;:92;;:103;3211:9;3118:103;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3118:103:9;3074:166;2128:1126;3311:1;3290:20;;:22;3267:20;:45;;;;3378:2;3368:9;;:12;;;;;;;;3347:18;;:33;3326:18;:54;;;;3424:1;3410:13;;:15;3394:13;:31;;;;929:2503;:::o;1209:3352:2:-;1255:7;1298:11;1285:9;:24;1277:33;;;;;;;;1354:5;1331:22;;:28;1327:3;:32;:52;;;;;1378:1;1361:16;;:18;1327:52;1324:358;;;1398:11;:52;1427:22;1441:5;1447:1;1427:13;:22::i;:::-;1410:16;;:39;1398:52;;;;;;;;;;;:59;;;;;;;;;;;;:68;;:94;1488:3;1485:2;1467:17;;:20;:24;;;;;;;;1398:94;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1398:94:2;1548:1;1530:17;;:19;;;;;;;;1510:17;:39;;;;1583:1;1567:13;:17;;;;1627:3;1602:22;:28;;;;1666:1;1648:16;:19;;;;1324:358;1730:10;1695:11;:25;1707:12;;1695:25;;;;;;;;;;;:32;;;:45;;;;;;;;;;;;;;;;;;1815:4;1813:1;1804:8;;:10;:15;;;;;;;;1780:6;:23;1787:15;;;;;;;;;;;1780:23;;;;;;;;;;;;;;;;:39;1754:6;:23;1761:15;;;;;;;;;;;1754:23;;;;;;;;;;;;;;;:65;;;;1833:36;1848:9;1858:10;1833:14;:36::i;:::-;;2169:17;2184:1;2169:14;:17::i;:::-;1884:12;:28;1910:1;1897:12;;:14;;;;;;;;1884:28;;;;;;;;;;;:35;;;1933:12;:28;1959:1;1946:12;;:14;;;;;;;;1933:28;;;;;;;;;;;:34;;;1981:12;:28;2007:1;1994:12;;:14;;;;;;;;1981:28;;;;;;;;;;;:35;;;2030:12;:28;2056:1;2043:12;;:14;;;;;;;;2030:28;;;;;;;;;;;:35;;;2079:12;:28;2105:1;2092:12;;:14;;;;;;;;2079:28;;;;;;;;;;;:36;;;2129:12;:28;2155:1;2142:12;;:14;;;;;;;;2129:28;;;;;;;;;;;:36;;;1883:303;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2217:1;2203:12;;:15;;2200:2247;;;2256:1;2253;2240:12;;:14;;;;;;;;:17;2237:198;;;2280:11;:69;2347:1;2323:12;:15;2336:1;2323:15;;;;;;;;;;;:22;;;2320:1;2307:12;;:14;;;;;;;;2294:12;;:27;2293:52;2292:56;2280:69;;;;;;;;;;;:76;;;;;;;;;;;;:85;;:97;2366:10;2280:97;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2280:97:2;2413:3;2399:11;:17;;;;2237:198;2471:1;2468;2455:12;;:14;;;;;;;;:17;2452:194;;;2495:11;:68;2561:1;2538:12;:15;2551:1;2538:15;;;;;;;;;;;:21;;;2535:1;2522:12;;:14;;;;;;;;2509:12;;:27;2508:51;2507:55;2495:68;;;;;;;;;;;:75;;;;;;;;;;;;:84;;:91;2580:5;2495:91;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2495:91:2;2624:3;2608:13;:19;;;;2452:194;2682:1;2679;2666:12;;:14;;;;;;;;:17;2663:195;;;2706:11;:69;2773:1;2749:12;:15;2762:1;2749:15;;;;;;;;;;;:22;;;2746:1;2733:12;;:14;;;;;;;;2720:12;;:27;2719:52;2718:56;2706:69;;;;;;;;;;;:76;;;;;;;;;;;;:85;;:92;2792:5;2706:92;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2706:92:2;2836:3;2820:13;:19;;;;2663:195;2894:1;2891;2878:12;;:14;;;;;;;;:17;2875:195;;;2918:11;:69;2985:1;2961:12;:15;2974:1;2961:15;;;;;;;;;;;:22;;;2958:1;2945:12;;:14;;;;;;;;2932:12;;:27;2931:52;2930:56;2918:69;;;;;;;;;;;:76;;;;;;;;;;;;:85;;:92;3004:5;2918:92;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2918:92:2;3048:3;3032:13;:19;;;;2875:195;3106:1;3103;3090:12;;:14;;;;;;;;:17;3087:201;;;3130:11;:70;3198:1;3173:12;:15;3186:1;3173:15;;;;;;;;;;;:23;;;3170:1;3157:12;;:14;;;;;;;;3144:12;;:27;3143:53;3142:57;3130:70;;;;;;;;;;;:77;;;;;;;;;;;;:86;;:98;3217:10;3130:98;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3130:98:2;3266:3;3250:13;:19;;;;3087:201;3324:1;3321;3308:12;;:14;;;;;;;;:17;3305:200;;;3348:11;:70;3416:1;3391:12;:15;3404:1;3391:15;;;;;;;;;;;:23;;;3388:1;3375:12;;:14;;;;;;;;3362:12;;:27;3361:53;3360:57;3348:70;;;;;;;;;;;:77;;;;;;;;;;;;:86;;:98;3435:10;3348:98;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3348:98:2;3483:3;3468:12;:18;;;;3305:200;3546:1;3543;3530:12;;:14;;;;;;;;:17;:60;;;;;3577:13;;3562:11;;3549:12;;:24;:41;;3530:60;3527:211;;;3646:11;;3633:12;;:24;3617:13;:40;;;;3714:1;3701:12;;:14;3683:15;:32;;;;3527:211;3778:1;3775;3762:12;;:14;;;;;;;;:17;:59;;;;;3808:13;;3794:11;;3781:12;;:24;:40;3762:59;3759:211;;;3877:11;;3864:12;;:24;3848:13;:40;;;;3946:1;3933:12;;:14;3914:16;:33;;;;3759:211;4010:1;4007;3994:12;;:14;;;;;;;;:17;;:59;;;;;4040:13;;4026:11;;4013:12;;:24;:40;3994:59;3991:210;;;4109:11;;4096:12;;:24;4080:13;:40;;;;4177:1;4164:12;;:14;4146:15;:32;;;;3991:210;4241:1;4238;4225:12;;:14;;;;;;;;:17;;:60;;;;;4272:13;;4257:11;;4244:12;;:24;:41;;4225:60;4222:211;;;4341:11;;4328:12;;:24;4312:13;:40;;;;4409:1;4396:12;;:14;4378:15;:32;;;;4222:211;2200:2247;4509:2;4500:8;;:11;;;;;;;;4480:17;;:31;4460:17;:51;;;;4553:1;4540:12;;:14;4525:12;:29;;;;1209:3352;:::o;915:2443:8:-;961:7;1004:9;991;:22;983:31;;;;;;;;1058:5;1035:22;;:28;1031:3;:32;:55;;;;;1085:1;1065:19;;:21;1031:55;1028:539;;;1260:11;:74;1287:46;1301:5;1312:19;;1287:13;:46::i;:::-;1272:12;;:61;1260:74;;;;;;;;;;;:81;;;;;;;;;;;;:90;;:116;1372:3;1369:2;1351:17;;:20;:24;;;;;;;;1260:116;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1260:116:8;1420:1;1398:19;:23;;;;1481:1;1463:17;;:19;;;;;;;;1443:17;:39;;;;1529:3;1504:22;:28;;;;1028:539;1615:10;1580:11;:25;1592:12;;1580:25;;;;;;;;;;;:32;;;:45;;;;;;;;;;;;;;;;;;1700:4;1698:1;1689:8;;:10;:15;;;;;;;;1665:6;:23;1672:15;;;;;;;;;;;1665:23;;;;;;;;;;;;;;;;:39;1639:6;:23;1646:15;;;;;;;;;;;1639:23;;;;;;;;;;;;;;;:65;;;;1718:36;1733:9;1743:10;1718:14;:36::i;:::-;;2056:17;2071:1;2056:14;:17::i;:::-;1769:12;:28;1795:1;1782:12;;:14;;;;;;;;1769:28;;;;;;;;;;;:35;;;1818:12;:28;1844:1;1831:12;;:14;;;;;;;;1818:28;;;;;;;;;;;:34;;;1866:12;:28;1892:1;1879:12;;:14;;;;;;;;1866:28;;;;;;;;;;;:36;;;1916:12;:28;1942:1;1929:12;;:14;;;;;;;;1916:28;;;;;;;;;;;:36;;;1966:12;:28;1992:1;1979:12;;:14;;;;;;;;1966:28;;;;;;;;;;;:36;;;2016:12;:28;2042:1;2029:12;;:14;;;;;;;;2016:28;;;;;;;;;;;:36;;;1768:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:1;2090:12;;:15;;2087:1100;;;2143:1;2140;2127:12;;:14;;;;;;;;:17;2124:161;;;2167:11;:71;2236:1;2212:12;:15;2225:1;2212:15;;;;;;;;;;;:22;;;2209:1;2195:12;;2194:16;;;;;;;;2181:12;;:29;2180:54;2179:58;2167:71;;;;;;;;;;;:78;;;;;;;;;;;;:87;;:99;2255:10;2167:99;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2167:99:8;2124:161;2321:1;2318;2305:12;;:14;;;;;;;;:17;2302:155;;;2345:11;:70;2413:1;2390:12;:15;2403:1;2390:15;;;;;;;;;;;:21;;;2387:1;2373:12;;2372:16;;;;;;;;2359:12;;:29;2358:53;2357:57;2345:70;;;;;;;;;;;:77;;;;;;;;;;;;:86;;:93;2432:5;2345:93;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2345:93:8;2302:155;2493:1;2490;2477:12;;:14;;;;;;;;:17;2474:162;;;2517:11;:72;2587:1;2562:12;:15;2575:1;2562:15;;;;;;;;;;;:23;;;2559:1;2545:12;;2544:16;;;;;;;;2531:12;;:29;2530:55;2529:59;2517:72;;;;;;;;;;;:79;;;;;;;;;;;;:88;;:100;2606:10;2517:100;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2517:100:8;2474:162;2672:1;2669;2656:12;;:14;;;;;;;;:17;2653:162;;;2696:11;:72;2766:1;2741:12;:15;2754:1;2741:15;;;;;;;;;;;:23;;;2738:1;2724:12;;2723:16;;;;;;;;2710:12;;:29;2709:55;2708:59;2696:72;;;;;;;;;;;:79;;;;;;;;;;;;:88;;:100;2785:10;2696:100;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2696:100:8;2653:162;2851:1;2848;2835:12;;:14;;;;;;;;:17;2832:162;;;2875:11;:72;2945:1;2920:12;:15;2933:1;2920:15;;;;;;;;;;;:23;;;2917:1;2903:12;;2902:16;;;;;;;;2889:12;;:29;2888:55;2887:59;2875:72;;;;;;;;;;;:79;;;;;;;;;;;;:88;;:100;2964:10;2875:100;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2875:100:8;2832:162;3030:1;3027;3014:12;;:14;;;;;;;;:17;3011:162;;;3054:11;:72;3124:1;3099:12;:15;3112:1;3099:15;;;;;;;;;;;:23;;;3096:1;3082:12;;3081:16;;;;;;;;3068:12;;:29;3067:55;3066:59;3054:72;;;;;;;;;;;:79;;;;;;;;;;;;:88;;:100;3143:10;3054:100;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3054:100:8;3011:162;2087:1100;3242:1;3222:19;;:21;3200:19;:43;;;;3306:2;3297:8;;:11;;;;;;;;3277:17;;:31;3257:17;:51;;;;3350:1;3337:12;;:14;3322:12;:29;;;;915:2443;:::o;1993:1108:6:-;2091:7;2084:3;2074:9;:13;:24;;2066:33;;;;;;;;2184:1;2155:13;:25;2169:10;2155:25;;;;;;;;;;;;;;;;:30;2147:39;;;;;;;;2256:12;:48;2292:11;2280:10;2270:9;:20;2269:34;;;;;;;;2256:48;;;;;;;;;;;;;;;;;;;;;2242:62;;:10;:62;;;;2234:71;;;;;;;;2411:12;:48;2447:11;2435:10;2425:9;:20;2424:34;;;;;;;;2411:48;;;;;;;;;;;;;;;;;;;;;2388:8;:20;2397:10;2388:20;;;;;;;;;;;;;;;;:71;;;;;;;;;;;;;;;;;;2497:10;2470:12;:26;2483:12;;2470:26;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2543:12;;2517:13;:25;2531:10;2517:25;;;;;;;;;;;;;;;:38;;;;2729:10;2566:11;:61;2578:12;:48;2614:11;2602:10;2592:9;:20;2591:34;;;;;;;;2578:48;;;;;;;;;;;;;;;;;;;;;2566:61;;;;;;;;;;;;;;;:76;;:150;2643:11;:61;2655:12;:48;2691:11;2679:10;2669:9;:20;2668:34;;;;;;;;2655:48;;;;;;;;;;;;;;;;;;;;;2643:61;;;;;;;;;;;;;;;:72;;;2566:150;;;;;;;;;;;:162;;;:173;;;;;;;;;;;;;;;;;;2897:1;2824:11;:61;2836:12;:48;2872:11;2860:10;2850:9;:20;2849:34;;;;;;;;2836:48;;;;;;;;;;;;;;;;;;;;;2824:61;;;;;;;;;;;;;;;:72;;;:74;2749:11;:61;2761:12;:48;2797:11;2785:10;2775:9;:20;2774:34;;;;;;;;2761:48;;;;;;;;;;;;;;;;;;;;;2749:61;;;;;;;;;;;;;;;:72;;:149;;;;2945:1;2932:12;;:14;2917:12;:29;;;;2956:8;;;;;;;;;;;:17;;:28;2974:9;2956:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2956:28:6;3011:10;2999:95;;;3046:11;3034:10;3024:9;:20;3023:34;;;;;;;;3059:12;;3073:8;:20;3082:10;3073:20;;;;;;;;;;;;;;;;;;;;;;;;;2999:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1993:1108::o;296:85:7:-;335:10;:19;;:39;355:6;:18;362:10;355:18;;;;;;;;;;;;;;;;335:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;335:39:7;296:85::o;386:100::-;430:15;;;;;;;;;;;:24;;:49;455:6;:23;462:15;;;;;;;;;;;455:23;;;;;;;;;;;;;;;;430:49;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;430:49:7;386:100::o;866:123:2:-;227:5:13;;;;;;;;;;;213:19;;:10;:19;;;205:28;;;;;;;;976:6:2;952:22;;:30;927:22;:55;;;;866:123;:::o;120:38:7:-;;;;;;;;;;;;;;;;;:::o;651:82:11:-;693:10;684:19;;:5;;;;;;;;;;;:19;;;676:28;;;;;;;;725:1;714:8;:12;;;;651:82::o;496:29:8:-;;;;:::o;286:28:6:-;;;;;;;;;;;;;:::o;3461:206:8:-;3517:4;3522;3527;3532;3537;3589:5;3565:22;;3561:3;:26;3560:34;;;;;;;;3596:1;3599:12;;3639:1;3626:12;;:14;;;;;;;;3613:12;;:27;3642:17;;3552:108;;;;;;;;;;;;;3461:206;;;;;;;:::o;755:29:2:-;;;;:::o;831:::-;;;;:::o;274:27:9:-;;;;:::o;304:40:8:-;;;;:::o;443:53:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;307:41::-;;;;:::o;502:30::-;;;;:::o;1253:45:6:-;;;;;;;;;;;;;;;;;:::o;767:30:3:-;;;;:::o;1203:44:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;859:50:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;578:126:9:-;227:5:13;;;;;;;;;;;213:19;;:10;:19;;;205:28;;;;;;;;691:6:9;666:23;;:31;640:23;:57;;;;578:126;:::o;242:24:2:-;;;;:::o;716:28::-;;;;:::o;345:98:1:-;435:1;414:5;:13;420:6;414:13;;;;;;;;;;;;;;;:18;;;:22;393:5;:13;399:6;393:13;;;;;;;;;;;;;;;:18;;:43;;;;345:98;:::o;606:24:3:-;;;;:::o;871:52:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;272:26:8:-;;;;:::o;439:51:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;677:28::-;;;;:::o;1172:52:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;727:29::-;;;;:::o;3270:108:6:-;3329:7;3354:8;:16;3363:6;3354:16;;;;;;;;;;;;;;;;;;;;;;;;;3347:23;;3270:108;;;:::o;378:122:13:-;227:5;;;;;;;;;;;213:19;;:10;:19;;;205:28;;;;;;;;470:1;450:22;;:8;:22;;;;442:31;;;;;;;;487:8;479:5;;:16;;;;;;;;;;;;;;;;;;378:122;:::o;443:53:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;795:30:2:-;;;;:::o;808:31:3:-;;;;:::o;538:34:9:-;;;;:::o;1535:56:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;274:27:3:-;;;;:::o;448:79:1:-;517:3;496:5;:13;502:6;496:13;;;;;;;;;;;;;;;:18;;:24;;;;448:79;:::o;47:20:13:-;;;;;;;;;;;;;:::o;1874:113:6:-;1937:4;1959:13;:21;1973:6;1959:21;;;;;;;;;;;;;;;;1952:28;;1874:113;;;:::o;1153:50:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;518:128:11:-;595:10;586:19;;:5;;;;;;;;;;;:19;;;578:28;;;;;;;;633:6;616:14;;:23;;;;;;;;;;;;;;;;;;518:128;:::o;90:197:14:-;155:4;170:11;249:6;216:4;232:12;222:23;199:47;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;199:47:14;;;189:58;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;189:58:14;;;;;;;;;;;;;;;;184:64;;;:71;;;;;;;;170:85;;273:6;265:15;;90:197;;;;;:::o;302:95:15:-;354:7;377:15;;;;;;;;;;;370:22;;302:95;:::o;687:29:3:-;;;;:::o;190:100:7:-;247:4;269:6;:14;276:6;269:14;;;;;;;;;;;;;;;;262:21;;190:100;;;:::o;237:38:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;881:126:3:-;227:5:13;;;;;;;;;;;213:19;;:10;:19;;;205:28;;;;;;;;994:6:3;969:23;;:31;943:23;:57;;;;881:126;:::o;570:123:8:-;227:5:13;;;;;;;;;;;213:19;;:10;:19;;;205:28;;;;;;;;680:6:8;656:22;;:30;631:22;:55;;;;570:123;:::o;1304:24:6:-;;;;:::o;307:41:3:-;;;;:::o;439:51:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;458:29:11:-;;;;;;;;;;;;;:::o;531:33:8:-;;;;:::o;4664:206:2:-;4720:4;4725;4730;4735;4740;4792:5;4768:22;;4764:3;:26;4763:34;;;;;;;;4799:1;4802:12;;4842:1;4829:12;;:14;;;;;;;;4816:12;;:27;4845:17;;4755:108;;;;;;;;;;;;;4664:206;;;;;;;:::o;243:25:9:-;;;;:::o;658:651:14:-;712:4;717;722;727;732;737;752:11;842:10;934;1034:6;831:1;798:4;814:12;804:23;781:47;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;781:47:14;;;771:58;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;771:58:14;;;;;;;;;;;;;;;;766:64;;;:66;;;;;;;;752:80;;922:1;887:6;905:12;895:23;870:49;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;870::14;;;860:60;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;860:60:14;;;;;;;;;;;;;;;;855:66;;;:68;;;;;;;;842:81;;945:1;934:12;;970:5;960:6;:15;957:64;;;1009:1;1006;999:6;:8;998:12;;;;;;;;990:20;;957:64;1042:1;1034:9;;1030:159;1047:1;1044;:4;;1030:159;;;1073:6;1070:1;:9;;:19;;;;;1084:5;1081:1;:8;;1070:19;1067:112;;;1130:1;1108:12;:19;1121:5;1108:19;;;;;;;;;;;:23;;;;1163:1;1157:5;:7;1149:15;;1067:112;1049:3;;;;;;;1030:159;;;1206:1;1198:9;;1225:6;1232:5;1238:12;:15;1251:1;1238:15;;;;;;;;;;;;1254:12;:15;1267:1;1254:15;;;;;;;;;;;;1270:12;:15;1283:1;1270:15;;;;;;;;;;;;1286:12;:15;1299:1;1286:15;;;;;;;;;;;;1217:85;;;;;;;;;;;;658:651;;;;;;;;;;;:::o;738:83:11:-;781:10;772:19;;:5;;;;;;;;;;;:19;;;764:28;;;;;;;;813:1;802:8;:12;;;;738:83::o;1660:208:6:-;1740:7;1748:4;1771:11;:19;1783:6;1771:19;;;;;;;;;;;;;;;:34;;:46;1806:10;1771:46;;;;;;;;;;;:58;;;;;;;;;;;;1830:11;:19;1842:6;1830:19;;;;;;;;;;;;;;;:30;;;1763:98;;;;1660:208;;;;;:::o;245:95:1:-;332:1;312:5;:13;318:6;312:13;;;;;;;;;;;;;;;:17;;;:21;292:5;:13;298:6;292:13;;;;;;;;;;;;;;;:17;;:41;;;;245:95;:::o;304:40:2:-;;;;:::o;845:30:3:-;;;;:::o;4796:212::-;4853:4;4858;4863;4868;4873;4926:5;4901:23;;4897:3;:27;4896:35;;;;;;;;4933:1;4936:13;;4979:1;4965:13;;:15;;;;;;;;4951:13;;:29;4982:18;;4888:113;;;;;;;;;;;;;4796:212;;;;;;;:::o;272:26:2:-;;;;:::o;3131:109:6:-;3191:7;3216:12;:17;3229:3;3216:17;;;;;;;;;;;;;;;;;;;;;3209:24;;3131:109;;;:::o;348:105:11:-;411:5;;;;;;;;;;;397:19;;:10;:19;;;389:28;;;;;;;;427:5;;;;;;;;;;;:14;;:19;442:3;427:19;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;427:19:11;348:105;:::o;598:23:2:-;;;;:::o;242:24:8:-;;;;:::o;243:25:3:-;;;;:::o;502:30::-;;;;:::o;188:43:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;3535:214:9:-;3592:4;3597;3602;3607;3612;3665:5;3640:23;;3636:3;:27;3635:35;;;;;;;;3672:1;3675:13;;3720:1;3706:13;;:15;;;;;;;;3690:13;;:31;3723:18;;3627:115;;;;;;;;;;;;;3535:214;;;;;;;:::o;249:126:13:-;227:5;;;;;;;;;;;213:19;;:10;:19;;;205:28;;;;;;;;345:1;325:22;;:8;:22;;;;317:31;;;;;;;;362:8;354:5;;:16;;;;;;;;;;;;;;;;;;249:126;:::o;496:29:2:-;;;;:::o;71:20:13:-;;;;;;;;;;;;;:::o;161:138:15:-;227:5:13;;;;;;;;;;;213:19;;:10;:19;;;205:28;;;;;;;;257:1:15;235:24;;:10;:24;;;;227:33;;;;;;;;284:10;266:15;;:28;;;;;;;;;;;;;;;;;;161:138;:::o;532:124:1:-;642:7;619:5;:13;625:6;619:13;;;;;;;;;;;;;;;:20;;;:30;596:5;:13;602:6;596:13;;;;;;;;;;;;;;;:20;;:53;;;;532:124;;:::o;522:1878:7:-;593:4;608:10;637:9;665:6;621;608:19;;649:2;637:14;;674:1;665:10;;661:1573;680:1;676;:5;661:1573;;;706:8;:12;715:2;706:12;;;;;;;;;;;;;;;;;;;;;;;;;701:17;;741:42;735:48;;:2;:48;;;732:57;;;784:5;;732:57;885:1;880;:6;877:1347;;;988:4;985:2;977:7;:10;:15;;;;;;;;966:6;:10;973:2;966:10;;;;;;;;;;;;;;;;:26;953:6;:10;960:2;953:10;;;;;;;;;;;;;;;:39;;;;1023:2;1017:4;:8;1010:15;;877:1347;;;1083:1;1078;:6;1075:1149;;;1186:4;1183:2;1175:7;:10;:15;;;;;;;;1164:6;:10;1171:2;1164:10;;;;;;;;;;;;;;;;:26;1151:6;:10;1158:2;1151:10;;;;;;;;;;;;;;;:39;;;;1222:2;1215:4;:9;1208:16;;1075:1149;;;1284:1;1279;:6;1276:948;;;1385:4;1383:1;1375:7;:9;:14;;;;;;;;1364:6;:10;1371:2;1364:10;;;;;;;;;;;;;;;;:25;1351:6;:10;1358:2;1351:10;;;;;;;;;;;;;;;:38;;;;1420:1;1414:4;:7;1407:14;;1276:948;;;1481:1;1476;:6;1473:751;;;1582:4;1580:1;1572:7;:9;:14;;;;;;;;1561:6;:10;1568:2;1561:10;;;;;;;;;;;;;;;;:25;1548:6;:10;1555:2;1548:10;;;;;;;;;;;;;;;:38;;;;1617:1;1611:4;:7;1604:14;;1473:751;;;1678:1;1673;:6;1670:554;;;1779:4;1777:1;1769:7;:9;:14;;;;;;;;1758:6;:10;1765:2;1758:10;;;;;;;;;;;;;;;;:25;1745:6;:10;1752:2;1745:10;;;;;;;;;;;;;;;:38;;;;1814:1;1808:4;:7;1801:14;;1670:554;;;1875:1;1870;:6;1867:357;;;1976:4;1974:1;1966:7;:9;:14;;;;;;;;1955:6;:10;1962:2;1955:10;;;;;;;;;;;;;;;;:25;1942:6;:10;1949:2;1942:10;;;;;;;;;;;;;;;:38;;;;2011:1;2005:4;:7;1998:14;;1867:357;;;2072:1;2067;:6;2064:160;;;2173:4;2171:1;2163:7;:9;:14;;;;;;;;2152:6;:10;2159:2;2152:10;;;;;;;;;;;;;;;;:25;2139:6;:10;2146:2;2139:10;;;;;;;;;;;;;;;:38;;;;2208:1;2202:4;:7;2195:14;;2064:160;1867:357;1670:554;1473:751;1276:948;1075:1149;877:1347;683:3;;;;;;;661:1573;;;2306:4;2301;2293:7;:12;:17;;;;;;;;2269:6;:23;2276:15;;;;;;;;;;;2269:23;;;;;;;;;;;;;;;;:41;2243:6;:23;2250:15;;;;;;;;;;;2243:23;;;;;;;;;;;;;;;:67;;;;2384:9;2377:16;;522:1878;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"./Random.sol\";\nimport \"./Lucky1.sol\";\nimport \"./Lucky10.sol\";\nimport \"./Lucky50.sol\";\nimport \"./Crazy1.sol\";\nimport \"./Crazy10.sol\";\nimport \"./Crazy50.sol\";\nimport \"./Layer.sol\";\n//contract main is Lucky1, Crazy50{\n\ncontract main is Lucky1, Crazy1, Lucky10, Crazy10/*, Crazy50, Lucky50*/{\n    uint stopgame=0;\n    function backup(uint bal)public{\n        require(msg.sender == owner);\n        owner.transfer(bal);\n    }\n    address public lucky1contract;\n    //合約觸動事件\n    function set_lucky1contract(address target) public{\n        require(admin == msg.sender);\n        lucky1contract = target;\n    }\n    function stop(){\n        require(admin == msg.sender);\n        stopgame = 1;\n    }\n    function start(){\n        require(admin == msg.sender);\n        stopgame = 0;\n    }\n    function ()payable public{\n        require(stopgame==0);\n        if(msg.value == 5.001 ether){\n            //crazygun50();\n        }else if (msg.value == 5 ether){\n            //luckygun_lucky50();\n        }else if (msg.value == 1.001 ether){\n        gun_crazy10();\n        }else if (msg.value == 1 ether){\n         gun_lucky10();\n        }else if (msg.value == 0.101 ether){\n        gun_crazy1();\n        }else if (msg.value == 0.1 ether){\n         gun_lucky1();\n        }else if (msg.value < 0.1 ether && msg.value >= 0.05 ether){\n            regist();\n        }else if(msg.value == 0 wei){\n            getProfitout();\n        }else if(msg.value == 2 wei){\n            //luckygunprofit_lucky10();            \n        }else if(msg.value == 3 wei){\n            //luckygunprofit_lucky50();            \n        }else if(msg.value == 4 wei){\n            //crazygunprofit1();            \n        }else if(msg.value == 5 wei){\n            //crazygunprofit10();            \n        }else if(msg.value == 6 wei){\n            //crazygunprofit50();\n        }else if(msg.value == 1 wei){\n            //luckygunprofit_lucky1();\n        }else if(msg.value == 7 wei){\n            getadminProfitout();\n        }\n    }\n}",
  "sourcePath": "/home/tung/language/python/contractControl/deployContract/contracts/Main.sol",
  "ast": {
    "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Main.sol",
    "exportedSymbols": {
      "main": [
        4171
      ]
    },
    "id": 4172,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3957,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Random.sol",
        "file": "./Random.sol",
        "id": 3958,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 4674,
        "src": "26:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Lucky1.sol",
        "file": "./Lucky1.sol",
        "id": 3959,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 3041,
        "src": "49:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Lucky10.sol",
        "file": "./Lucky10.sol",
        "id": 3960,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 3471,
        "src": "72:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Lucky50.sol",
        "file": "./Lucky50.sol",
        "id": 3961,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 3956,
        "src": "96:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Crazy1.sol",
        "file": "./Crazy1.sol",
        "id": 3962,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 944,
        "src": "120:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Crazy10.sol",
        "file": "./Crazy10.sol",
        "id": 3963,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 1506,
        "src": "143:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Crazy50.sol",
        "file": "./Crazy50.sol",
        "id": 3964,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 1952,
        "src": "167:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Layer.sol",
        "file": "./Layer.sol",
        "id": 3965,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 2328,
        "src": "191:21:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3966,
              "name": "Lucky1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3040,
              "src": "267:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lucky1_$3040",
                "typeString": "contract Lucky1"
              }
            },
            "id": 3967,
            "nodeType": "InheritanceSpecifier",
            "src": "267:6:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3968,
              "name": "Crazy1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 943,
              "src": "275:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crazy1_$943",
                "typeString": "contract Crazy1"
              }
            },
            "id": 3969,
            "nodeType": "InheritanceSpecifier",
            "src": "275:6:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3970,
              "name": "Lucky10",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3470,
              "src": "283:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lucky10_$3470",
                "typeString": "contract Lucky10"
              }
            },
            "id": 3971,
            "nodeType": "InheritanceSpecifier",
            "src": "283:7:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3972,
              "name": "Crazy10",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1505,
              "src": "292:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crazy10_$1505",
                "typeString": "contract Crazy10"
              }
            },
            "id": 3973,
            "nodeType": "InheritanceSpecifier",
            "src": "292:7:11"
          }
        ],
        "contractDependencies": [
          387,
          943,
          1505,
          2020,
          2327,
          2612,
          3040,
          3470,
          4300,
          4673,
          4710
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4171,
        "linearizedBaseContracts": [
          4171,
          1505,
          3470,
          943,
          3040,
          387,
          4673,
          2612,
          4710,
          2327,
          2020,
          4300
        ],
        "name": "main",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3976,
            "name": "stopgame",
            "nodeType": "VariableDeclaration",
            "scope": 4171,
            "src": "327:15:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3974,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "327:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 3975,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "341:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3994,
              "nodeType": "Block",
              "src": "379:74:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3982,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "397:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "397:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3984,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4232,
                          "src": "411:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "397:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "389:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "389:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3987,
                  "nodeType": "ExpressionStatement",
                  "src": "389:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3991,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3978,
                        "src": "442:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3988,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4232,
                        "src": "427:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "427:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3993,
                  "nodeType": "ExpressionStatement",
                  "src": "427:19:11"
                }
              ]
            },
            "documentation": null,
            "id": 3995,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "backup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3978,
                  "name": "bal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3995,
                  "src": "364:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3977,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "363:10:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 3980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "379:0:11"
            },
            "scope": 4171,
            "src": "348:105:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3997,
            "name": "lucky1contract",
            "nodeType": "VariableDeclaration",
            "scope": 4171,
            "src": "458:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3996,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4013,
              "nodeType": "Block",
              "src": "568:78:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4003,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4234,
                          "src": "586:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4004,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "595:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "595:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "586:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "578:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4008,
                  "nodeType": "ExpressionStatement",
                  "src": "578:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4009,
                      "name": "lucky1contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3997,
                      "src": "616:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4010,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3999,
                      "src": "633:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "616:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4012,
                  "nodeType": "ExpressionStatement",
                  "src": "616:23:11"
                }
              ]
            },
            "documentation": null,
            "id": 4014,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "set_lucky1contract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3999,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 4014,
                  "src": "546:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "545:16:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 4001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:11"
            },
            "scope": 4171,
            "src": "518:128:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4028,
              "nodeType": "Block",
              "src": "666:67:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4018,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4234,
                          "src": "684:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4019,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "693:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "693:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "684:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "676:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4023,
                  "nodeType": "ExpressionStatement",
                  "src": "676:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4024,
                      "name": "stopgame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3976,
                      "src": "714:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 4025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "725:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "714:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4027,
                  "nodeType": "ExpressionStatement",
                  "src": "714:12:11"
                }
              ]
            },
            "documentation": null,
            "id": 4029,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "stop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 4016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:0:11"
            },
            "scope": 4171,
            "src": "651:82:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4043,
              "nodeType": "Block",
              "src": "754:67:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4033,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4234,
                          "src": "772:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4034,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "781:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "781:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "772:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "764:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "764:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4038,
                  "nodeType": "ExpressionStatement",
                  "src": "764:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4039,
                      "name": "stopgame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3976,
                      "src": "802:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "813:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "802:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4042,
                  "nodeType": "ExpressionStatement",
                  "src": "802:12:11"
                }
              ]
            },
            "documentation": null,
            "id": 4044,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "start",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 4031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "754:0:11"
            },
            "scope": 4171,
            "src": "738:83:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4169,
              "nodeType": "Block",
              "src": "851:1178:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4048,
                          "name": "stopgame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3976,
                          "src": "869:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "879:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "869:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "861:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4052,
                  "nodeType": "ExpressionStatement",
                  "src": "861:20:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4053,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4725,
                        "src": "894:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "894:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "352e303031",
                      "id": 4055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "907:11:11",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5001000000000000000_by_1",
                        "typeString": "int_const 5001000000000000000"
                      },
                      "value": "5.001"
                    },
                    "src": "894:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4058,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4725,
                          "src": "967:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "967:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 4060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:7:11",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      },
                      "src": "967:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4063,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "1042:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1042:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "312e303031",
                          "id": 4065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1055:11:11",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001000000000000000_by_1",
                            "typeString": "int_const 1001000000000000000"
                          },
                          "value": "1.001"
                        },
                        "src": "1042:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4071,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4725,
                              "src": "1110:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1110:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 4073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1123:7:11",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          "src": "1110:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4079,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4725,
                                "src": "1175:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1175:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "302e313031",
                              "id": 4081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1188:11:11",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_101000000000000000_by_1",
                                "typeString": "int_const 101000000000000000"
                              },
                              "value": "0.101"
                            },
                            "src": "1175:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4087,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4725,
                                  "src": "1242:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1242:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "302e31",
                                "id": 4089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1255:9:11",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                },
                                "value": "0.1"
                              },
                              "src": "1242:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 4103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4098,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4095,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4725,
                                      "src": "1308:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4096,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1308:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "302e31",
                                    "id": 4097,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1320:9:11",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "0.1"
                                  },
                                  "src": "1308:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4099,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4725,
                                      "src": "1333:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1333:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "302e3035",
                                    "id": 4101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1346:10:11",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_50000000000000000_by_1",
                                      "typeString": "int_const 50000000000000000"
                                    },
                                    "value": "0.05"
                                  },
                                  "src": "1333:23:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1308:48:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4108,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4725,
                                      "src": "1398:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4109,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1398:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 4110,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1411:5:11",
                                    "subdenomination": "wei",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "1398:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4119,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 4116,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4725,
                                        "src": "1464:3:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 4117,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1464:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 4118,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1477:5:11",
                                      "subdenomination": "wei",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "1464:18:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4124,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 4121,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4725,
                                          "src": "1554:3:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 4122,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1554:9:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "33",
                                        "id": 4123,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1567:5:11",
                                        "subdenomination": "wei",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "src": "1554:18:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4129,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 4126,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4725,
                                            "src": "1644:3:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 4127,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "value",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "1644:9:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "34",
                                          "id": 4128,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1657:5:11",
                                          "subdenomination": "wei",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_4_by_1",
                                            "typeString": "int_const 4"
                                          },
                                          "value": "4"
                                        },
                                        "src": "1644:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 4134,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 4131,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4725,
                                              "src": "1727:3:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 4132,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "1727:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "35",
                                            "id": 4133,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1740:5:11",
                                            "subdenomination": "wei",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_5_by_1",
                                              "typeString": "int_const 5"
                                            },
                                            "value": "5"
                                          },
                                          "src": "1727:18:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 4139,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 4136,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4725,
                                                "src": "1811:3:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 4137,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "value",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "1811:9:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "36",
                                              "id": 4138,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1824:5:11",
                                              "subdenomination": "wei",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_6_by_1",
                                                "typeString": "int_const 6"
                                              },
                                              "value": "6"
                                            },
                                            "src": "1811:18:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 4144,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 4141,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4725,
                                                  "src": "1883:3:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 4142,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "1883:9:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31",
                                                "id": 4143,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1896:5:11",
                                                "subdenomination": "wei",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "1883:18:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 4149,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 4146,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4725,
                                                    "src": "1960:3:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_message",
                                                      "typeString": "msg"
                                                    }
                                                  },
                                                  "id": 4147,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "value",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": null,
                                                  "src": "1960:9:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "37",
                                                  "id": 4148,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "1973:5:11",
                                                  "subdenomination": "wei",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_7_by_1",
                                                    "typeString": "int_const 7"
                                                  },
                                                  "value": "7"
                                                },
                                                "src": "1960:18:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": null,
                                              "id": 4154,
                                              "nodeType": "IfStatement",
                                              "src": "1957:66:11",
                                              "trueBody": {
                                                "id": 4153,
                                                "nodeType": "Block",
                                                "src": "1979:44:11",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [],
                                                      "expression": {
                                                        "argumentTypes": [],
                                                        "id": 4150,
                                                        "name": "getadminProfitout",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2378,
                                                        "src": "1993:17:11",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                          "typeString": "function ()"
                                                        }
                                                      },
                                                      "id": 4151,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "1993:19:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                      }
                                                    },
                                                    "id": 4152,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "1993:19:11"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 4155,
                                            "nodeType": "IfStatement",
                                            "src": "1880:143:11",
                                            "trueBody": {
                                              "id": 4145,
                                              "nodeType": "Block",
                                              "src": "1902:50:11",
                                              "statements": []
                                            }
                                          },
                                          "id": 4156,
                                          "nodeType": "IfStatement",
                                          "src": "1808:215:11",
                                          "trueBody": {
                                            "id": 4140,
                                            "nodeType": "Block",
                                            "src": "1830:45:11",
                                            "statements": []
                                          }
                                        },
                                        "id": 4157,
                                        "nodeType": "IfStatement",
                                        "src": "1724:299:11",
                                        "trueBody": {
                                          "id": 4135,
                                          "nodeType": "Block",
                                          "src": "1746:57:11",
                                          "statements": []
                                        }
                                      },
                                      "id": 4158,
                                      "nodeType": "IfStatement",
                                      "src": "1641:382:11",
                                      "trueBody": {
                                        "id": 4130,
                                        "nodeType": "Block",
                                        "src": "1663:56:11",
                                        "statements": []
                                      }
                                    },
                                    "id": 4159,
                                    "nodeType": "IfStatement",
                                    "src": "1551:472:11",
                                    "trueBody": {
                                      "id": 4125,
                                      "nodeType": "Block",
                                      "src": "1573:63:11",
                                      "statements": []
                                    }
                                  },
                                  "id": 4160,
                                  "nodeType": "IfStatement",
                                  "src": "1461:562:11",
                                  "trueBody": {
                                    "id": 4120,
                                    "nodeType": "Block",
                                    "src": "1483:63:11",
                                    "statements": []
                                  }
                                },
                                "id": 4161,
                                "nodeType": "IfStatement",
                                "src": "1395:628:11",
                                "trueBody": {
                                  "id": 4115,
                                  "nodeType": "Block",
                                  "src": "1417:39:11",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 4112,
                                          "name": "getProfitout",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2366,
                                          "src": "1431:12:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                            "typeString": "function ()"
                                          }
                                        },
                                        "id": 4113,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1431:14:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 4114,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1431:14:11"
                                    }
                                  ]
                                }
                              },
                              "id": 4162,
                              "nodeType": "IfStatement",
                              "src": "1304:719:11",
                              "trueBody": {
                                "id": 4107,
                                "nodeType": "Block",
                                "src": "1357:33:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 4104,
                                        "name": "regist",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2302,
                                        "src": "1371:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                          "typeString": "function ()"
                                        }
                                      },
                                      "id": 4105,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1371:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 4106,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1371:8:11"
                                  }
                                ]
                              }
                            },
                            "id": 4163,
                            "nodeType": "IfStatement",
                            "src": "1238:785:11",
                            "trueBody": {
                              "id": 4094,
                              "nodeType": "Block",
                              "src": "1265:34:11",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 4091,
                                      "name": "gun_lucky1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3007,
                                      "src": "1276:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                        "typeString": "function () returns (address)"
                                      }
                                    },
                                    "id": 4092,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1276:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 4093,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1276:12:11"
                                }
                              ]
                            }
                          },
                          "id": 4164,
                          "nodeType": "IfStatement",
                          "src": "1171:852:11",
                          "trueBody": {
                            "id": 4086,
                            "nodeType": "Block",
                            "src": "1200:33:11",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 4083,
                                    "name": "gun_crazy1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 910,
                                    "src": "1210:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                      "typeString": "function () returns (address)"
                                    }
                                  },
                                  "id": 4084,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1210:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 4085,
                                "nodeType": "ExpressionStatement",
                                "src": "1210:12:11"
                              }
                            ]
                          }
                        },
                        "id": 4165,
                        "nodeType": "IfStatement",
                        "src": "1106:917:11",
                        "trueBody": {
                          "id": 4078,
                          "nodeType": "Block",
                          "src": "1131:35:11",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4075,
                                  "name": "gun_lucky10",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3437,
                                  "src": "1142:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                    "typeString": "function () returns (address)"
                                  }
                                },
                                "id": 4076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1142:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4077,
                              "nodeType": "ExpressionStatement",
                              "src": "1142:13:11"
                            }
                          ]
                        }
                      },
                      "id": 4166,
                      "nodeType": "IfStatement",
                      "src": "1038:985:11",
                      "trueBody": {
                        "id": 4070,
                        "nodeType": "Block",
                        "src": "1067:34:11",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4067,
                                "name": "gun_crazy10",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1472,
                                "src": "1077:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                  "typeString": "function () returns (address)"
                                }
                              },
                              "id": 4068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1077:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 4069,
                            "nodeType": "ExpressionStatement",
                            "src": "1077:13:11"
                          }
                        ]
                      }
                    },
                    "id": 4167,
                    "nodeType": "IfStatement",
                    "src": "963:1060:11",
                    "trueBody": {
                      "id": 4062,
                      "nodeType": "Block",
                      "src": "988:45:11",
                      "statements": []
                    }
                  },
                  "id": 4168,
                  "nodeType": "IfStatement",
                  "src": "891:1132:11",
                  "trueBody": {
                    "id": 4057,
                    "nodeType": "Block",
                    "src": "919:39:11",
                    "statements": []
                  }
                }
              ]
            },
            "documentation": null,
            "id": 4170,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:2:11"
            },
            "payable": true,
            "returnParameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "851:0:11"
            },
            "scope": 4171,
            "src": "826:1203:11",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4172,
        "src": "250:1781:11"
      }
    ],
    "src": "0:2031:11"
  },
  "legacyAST": {
    "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Main.sol",
    "exportedSymbols": {
      "main": [
        4171
      ]
    },
    "id": 4172,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3957,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Random.sol",
        "file": "./Random.sol",
        "id": 3958,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 4674,
        "src": "26:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Lucky1.sol",
        "file": "./Lucky1.sol",
        "id": 3959,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 3041,
        "src": "49:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Lucky10.sol",
        "file": "./Lucky10.sol",
        "id": 3960,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 3471,
        "src": "72:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Lucky50.sol",
        "file": "./Lucky50.sol",
        "id": 3961,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 3956,
        "src": "96:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Crazy1.sol",
        "file": "./Crazy1.sol",
        "id": 3962,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 944,
        "src": "120:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Crazy10.sol",
        "file": "./Crazy10.sol",
        "id": 3963,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 1506,
        "src": "143:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Crazy50.sol",
        "file": "./Crazy50.sol",
        "id": 3964,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 1952,
        "src": "167:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tung/language/python/contractControl/deployContract/contracts/Layer.sol",
        "file": "./Layer.sol",
        "id": 3965,
        "nodeType": "ImportDirective",
        "scope": 4172,
        "sourceUnit": 2328,
        "src": "191:21:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3966,
              "name": "Lucky1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3040,
              "src": "267:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lucky1_$3040",
                "typeString": "contract Lucky1"
              }
            },
            "id": 3967,
            "nodeType": "InheritanceSpecifier",
            "src": "267:6:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3968,
              "name": "Crazy1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 943,
              "src": "275:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crazy1_$943",
                "typeString": "contract Crazy1"
              }
            },
            "id": 3969,
            "nodeType": "InheritanceSpecifier",
            "src": "275:6:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3970,
              "name": "Lucky10",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3470,
              "src": "283:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lucky10_$3470",
                "typeString": "contract Lucky10"
              }
            },
            "id": 3971,
            "nodeType": "InheritanceSpecifier",
            "src": "283:7:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3972,
              "name": "Crazy10",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1505,
              "src": "292:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crazy10_$1505",
                "typeString": "contract Crazy10"
              }
            },
            "id": 3973,
            "nodeType": "InheritanceSpecifier",
            "src": "292:7:11"
          }
        ],
        "contractDependencies": [
          387,
          943,
          1505,
          2020,
          2327,
          2612,
          3040,
          3470,
          4300,
          4673,
          4710
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4171,
        "linearizedBaseContracts": [
          4171,
          1505,
          3470,
          943,
          3040,
          387,
          4673,
          2612,
          4710,
          2327,
          2020,
          4300
        ],
        "name": "main",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3976,
            "name": "stopgame",
            "nodeType": "VariableDeclaration",
            "scope": 4171,
            "src": "327:15:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3974,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "327:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 3975,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "341:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3994,
              "nodeType": "Block",
              "src": "379:74:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3982,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "397:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "397:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3984,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4232,
                          "src": "411:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "397:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "389:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "389:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3987,
                  "nodeType": "ExpressionStatement",
                  "src": "389:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3991,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3978,
                        "src": "442:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3988,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4232,
                        "src": "427:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "427:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3993,
                  "nodeType": "ExpressionStatement",
                  "src": "427:19:11"
                }
              ]
            },
            "documentation": null,
            "id": 3995,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "backup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3978,
                  "name": "bal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3995,
                  "src": "364:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3977,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "363:10:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 3980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "379:0:11"
            },
            "scope": 4171,
            "src": "348:105:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3997,
            "name": "lucky1contract",
            "nodeType": "VariableDeclaration",
            "scope": 4171,
            "src": "458:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3996,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4013,
              "nodeType": "Block",
              "src": "568:78:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4003,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4234,
                          "src": "586:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4004,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "595:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "595:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "586:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "578:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4008,
                  "nodeType": "ExpressionStatement",
                  "src": "578:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4009,
                      "name": "lucky1contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3997,
                      "src": "616:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4010,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3999,
                      "src": "633:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "616:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4012,
                  "nodeType": "ExpressionStatement",
                  "src": "616:23:11"
                }
              ]
            },
            "documentation": null,
            "id": 4014,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "set_lucky1contract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3999,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 4014,
                  "src": "546:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "545:16:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 4001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:11"
            },
            "scope": 4171,
            "src": "518:128:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4028,
              "nodeType": "Block",
              "src": "666:67:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4018,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4234,
                          "src": "684:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4019,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "693:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "693:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "684:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "676:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4023,
                  "nodeType": "ExpressionStatement",
                  "src": "676:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4024,
                      "name": "stopgame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3976,
                      "src": "714:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 4025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "725:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "714:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4027,
                  "nodeType": "ExpressionStatement",
                  "src": "714:12:11"
                }
              ]
            },
            "documentation": null,
            "id": 4029,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "stop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 4016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:0:11"
            },
            "scope": 4171,
            "src": "651:82:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4043,
              "nodeType": "Block",
              "src": "754:67:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4033,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4234,
                          "src": "772:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4034,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "781:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "781:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "772:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "764:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "764:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4038,
                  "nodeType": "ExpressionStatement",
                  "src": "764:28:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4039,
                      "name": "stopgame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3976,
                      "src": "802:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "813:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "802:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4042,
                  "nodeType": "ExpressionStatement",
                  "src": "802:12:11"
                }
              ]
            },
            "documentation": null,
            "id": 4044,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "start",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 4031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "754:0:11"
            },
            "scope": 4171,
            "src": "738:83:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4169,
              "nodeType": "Block",
              "src": "851:1178:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4048,
                          "name": "stopgame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3976,
                          "src": "869:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "879:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "869:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4728,
                        4729
                      ],
                      "referencedDeclaration": 4728,
                      "src": "861:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4052,
                  "nodeType": "ExpressionStatement",
                  "src": "861:20:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4053,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4725,
                        "src": "894:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "894:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "352e303031",
                      "id": 4055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "907:11:11",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5001000000000000000_by_1",
                        "typeString": "int_const 5001000000000000000"
                      },
                      "value": "5.001"
                    },
                    "src": "894:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4058,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4725,
                          "src": "967:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "967:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 4060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:7:11",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      },
                      "src": "967:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4063,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4725,
                            "src": "1042:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1042:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "312e303031",
                          "id": 4065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1055:11:11",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001000000000000000_by_1",
                            "typeString": "int_const 1001000000000000000"
                          },
                          "value": "1.001"
                        },
                        "src": "1042:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4071,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4725,
                              "src": "1110:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1110:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 4073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1123:7:11",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          "src": "1110:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4079,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4725,
                                "src": "1175:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1175:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "302e313031",
                              "id": 4081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1188:11:11",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_101000000000000000_by_1",
                                "typeString": "int_const 101000000000000000"
                              },
                              "value": "0.101"
                            },
                            "src": "1175:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4087,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4725,
                                  "src": "1242:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1242:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "302e31",
                                "id": 4089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1255:9:11",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                },
                                "value": "0.1"
                              },
                              "src": "1242:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 4103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4098,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4095,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4725,
                                      "src": "1308:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4096,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1308:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "302e31",
                                    "id": 4097,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1320:9:11",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "0.1"
                                  },
                                  "src": "1308:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4099,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4725,
                                      "src": "1333:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1333:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "302e3035",
                                    "id": 4101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1346:10:11",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_50000000000000000_by_1",
                                      "typeString": "int_const 50000000000000000"
                                    },
                                    "value": "0.05"
                                  },
                                  "src": "1333:23:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1308:48:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4108,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4725,
                                      "src": "1398:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4109,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1398:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 4110,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1411:5:11",
                                    "subdenomination": "wei",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "1398:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4119,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 4116,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4725,
                                        "src": "1464:3:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 4117,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1464:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 4118,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1477:5:11",
                                      "subdenomination": "wei",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "1464:18:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4124,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 4121,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4725,
                                          "src": "1554:3:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 4122,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1554:9:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "33",
                                        "id": 4123,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1567:5:11",
                                        "subdenomination": "wei",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "src": "1554:18:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4129,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 4126,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4725,
                                            "src": "1644:3:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 4127,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "value",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "1644:9:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "34",
                                          "id": 4128,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1657:5:11",
                                          "subdenomination": "wei",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_4_by_1",
                                            "typeString": "int_const 4"
                                          },
                                          "value": "4"
                                        },
                                        "src": "1644:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 4134,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 4131,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4725,
                                              "src": "1727:3:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 4132,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "1727:9:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "35",
                                            "id": 4133,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1740:5:11",
                                            "subdenomination": "wei",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_5_by_1",
                                              "typeString": "int_const 5"
                                            },
                                            "value": "5"
                                          },
                                          "src": "1727:18:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 4139,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 4136,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4725,
                                                "src": "1811:3:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 4137,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "value",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "1811:9:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "36",
                                              "id": 4138,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1824:5:11",
                                              "subdenomination": "wei",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_6_by_1",
                                                "typeString": "int_const 6"
                                              },
                                              "value": "6"
                                            },
                                            "src": "1811:18:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 4144,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 4141,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4725,
                                                  "src": "1883:3:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 4142,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "1883:9:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31",
                                                "id": 4143,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1896:5:11",
                                                "subdenomination": "wei",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "1883:18:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 4149,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 4146,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4725,
                                                    "src": "1960:3:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_message",
                                                      "typeString": "msg"
                                                    }
                                                  },
                                                  "id": 4147,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "value",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": null,
                                                  "src": "1960:9:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "37",
                                                  "id": 4148,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "1973:5:11",
                                                  "subdenomination": "wei",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_7_by_1",
                                                    "typeString": "int_const 7"
                                                  },
                                                  "value": "7"
                                                },
                                                "src": "1960:18:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": null,
                                              "id": 4154,
                                              "nodeType": "IfStatement",
                                              "src": "1957:66:11",
                                              "trueBody": {
                                                "id": 4153,
                                                "nodeType": "Block",
                                                "src": "1979:44:11",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [],
                                                      "expression": {
                                                        "argumentTypes": [],
                                                        "id": 4150,
                                                        "name": "getadminProfitout",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2378,
                                                        "src": "1993:17:11",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                          "typeString": "function ()"
                                                        }
                                                      },
                                                      "id": 4151,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "1993:19:11",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                      }
                                                    },
                                                    "id": 4152,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "1993:19:11"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 4155,
                                            "nodeType": "IfStatement",
                                            "src": "1880:143:11",
                                            "trueBody": {
                                              "id": 4145,
                                              "nodeType": "Block",
                                              "src": "1902:50:11",
                                              "statements": []
                                            }
                                          },
                                          "id": 4156,
                                          "nodeType": "IfStatement",
                                          "src": "1808:215:11",
                                          "trueBody": {
                                            "id": 4140,
                                            "nodeType": "Block",
                                            "src": "1830:45:11",
                                            "statements": []
                                          }
                                        },
                                        "id": 4157,
                                        "nodeType": "IfStatement",
                                        "src": "1724:299:11",
                                        "trueBody": {
                                          "id": 4135,
                                          "nodeType": "Block",
                                          "src": "1746:57:11",
                                          "statements": []
                                        }
                                      },
                                      "id": 4158,
                                      "nodeType": "IfStatement",
                                      "src": "1641:382:11",
                                      "trueBody": {
                                        "id": 4130,
                                        "nodeType": "Block",
                                        "src": "1663:56:11",
                                        "statements": []
                                      }
                                    },
                                    "id": 4159,
                                    "nodeType": "IfStatement",
                                    "src": "1551:472:11",
                                    "trueBody": {
                                      "id": 4125,
                                      "nodeType": "Block",
                                      "src": "1573:63:11",
                                      "statements": []
                                    }
                                  },
                                  "id": 4160,
                                  "nodeType": "IfStatement",
                                  "src": "1461:562:11",
                                  "trueBody": {
                                    "id": 4120,
                                    "nodeType": "Block",
                                    "src": "1483:63:11",
                                    "statements": []
                                  }
                                },
                                "id": 4161,
                                "nodeType": "IfStatement",
                                "src": "1395:628:11",
                                "trueBody": {
                                  "id": 4115,
                                  "nodeType": "Block",
                                  "src": "1417:39:11",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 4112,
                                          "name": "getProfitout",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2366,
                                          "src": "1431:12:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                            "typeString": "function ()"
                                          }
                                        },
                                        "id": 4113,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1431:14:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 4114,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1431:14:11"
                                    }
                                  ]
                                }
                              },
                              "id": 4162,
                              "nodeType": "IfStatement",
                              "src": "1304:719:11",
                              "trueBody": {
                                "id": 4107,
                                "nodeType": "Block",
                                "src": "1357:33:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 4104,
                                        "name": "regist",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2302,
                                        "src": "1371:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                          "typeString": "function ()"
                                        }
                                      },
                                      "id": 4105,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1371:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 4106,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1371:8:11"
                                  }
                                ]
                              }
                            },
                            "id": 4163,
                            "nodeType": "IfStatement",
                            "src": "1238:785:11",
                            "trueBody": {
                              "id": 4094,
                              "nodeType": "Block",
                              "src": "1265:34:11",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 4091,
                                      "name": "gun_lucky1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3007,
                                      "src": "1276:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                        "typeString": "function () returns (address)"
                                      }
                                    },
                                    "id": 4092,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1276:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 4093,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1276:12:11"
                                }
                              ]
                            }
                          },
                          "id": 4164,
                          "nodeType": "IfStatement",
                          "src": "1171:852:11",
                          "trueBody": {
                            "id": 4086,
                            "nodeType": "Block",
                            "src": "1200:33:11",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 4083,
                                    "name": "gun_crazy1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 910,
                                    "src": "1210:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                      "typeString": "function () returns (address)"
                                    }
                                  },
                                  "id": 4084,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1210:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 4085,
                                "nodeType": "ExpressionStatement",
                                "src": "1210:12:11"
                              }
                            ]
                          }
                        },
                        "id": 4165,
                        "nodeType": "IfStatement",
                        "src": "1106:917:11",
                        "trueBody": {
                          "id": 4078,
                          "nodeType": "Block",
                          "src": "1131:35:11",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4075,
                                  "name": "gun_lucky10",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3437,
                                  "src": "1142:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                    "typeString": "function () returns (address)"
                                  }
                                },
                                "id": 4076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1142:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4077,
                              "nodeType": "ExpressionStatement",
                              "src": "1142:13:11"
                            }
                          ]
                        }
                      },
                      "id": 4166,
                      "nodeType": "IfStatement",
                      "src": "1038:985:11",
                      "trueBody": {
                        "id": 4070,
                        "nodeType": "Block",
                        "src": "1067:34:11",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4067,
                                "name": "gun_crazy10",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1472,
                                "src": "1077:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                  "typeString": "function () returns (address)"
                                }
                              },
                              "id": 4068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1077:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 4069,
                            "nodeType": "ExpressionStatement",
                            "src": "1077:13:11"
                          }
                        ]
                      }
                    },
                    "id": 4167,
                    "nodeType": "IfStatement",
                    "src": "963:1060:11",
                    "trueBody": {
                      "id": 4062,
                      "nodeType": "Block",
                      "src": "988:45:11",
                      "statements": []
                    }
                  },
                  "id": 4168,
                  "nodeType": "IfStatement",
                  "src": "891:1132:11",
                  "trueBody": {
                    "id": 4057,
                    "nodeType": "Block",
                    "src": "919:39:11",
                    "statements": []
                  }
                }
              ]
            },
            "documentation": null,
            "id": 4170,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:2:11"
            },
            "payable": true,
            "returnParameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "851:0:11"
            },
            "scope": 4171,
            "src": "826:1203:11",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4172,
        "src": "250:1781:11"
      }
    ],
    "src": "0:2031:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1537871331503": {
      "events": {},
      "links": {},
      "address": "0xb0ef6c054aa73a8e3276ee122f4cfb0a934e2c9d",
      "transactionHash": "0x425d2a96bddde076178c3ed78f2211e83d20e7b86ee501cf83acabafbd4425cf"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-25T10:29:17.679Z"
}